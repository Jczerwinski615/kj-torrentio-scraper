{"version":3,"sources":["../src/index.ts","../src/client.ts","../src/errors.ts","../src/utils.ts","../src/oauth2.ts","../src/merchant.ts"],"sourcesContent":["export * from './client'\nexport * from './oauth2'\nexport * from './merchant'\n","import axios, { AxiosInstance } from \"axios\";\nimport { toEasyDebridError } from \"./errors\";\nimport { getApiUrl, getHost } from \"./utils\";\n\nexport interface EasyDebridGetUserDetailsResponse {\n  id: string;\n  paid_until: Date | null;\n}\n\nexport interface EasyDebridGetUserDetailsResponseAPI {\n  id: string;\n  paid_until: number;\n}\n\nexport interface EasyDebridCouponSubmitResponse {\n  success: boolean;\n}\n\nexport interface EasyDebridLinkLookupResponse {\n  cached: boolean[];\n  filenames: string[][];\n}\n\nexport interface EasyDebridLinkLookupDetailsResponse {\n  result: LinkLookupDetailsResult[];\n}\n\nexport interface LinkLookupDetailsResult {\n  cached: boolean;\n  files: LinkLookupDetailsFile[];\n}\n\nexport interface LinkLookupDetailsFile {\n  size: number;\n  name: string;\n  folder: string;\n}\n\nexport interface EasyDebridGenerateDebridLinkResponse {\n  files: GenerateDebridFile[];\n}\n\nexport interface GenerateDebridFile {\n  filename: string;\n  directory: string[];\n  size: number;\n  url: string;\n}\n\nexport interface EasyDebridErrorResponse {\n  code?: string;\n  message: string;\n}\n\nexport interface EasyDebridClientOptions {\n  accessToken?: string;\n  env?: \"production\" | \"sandbox\";\n}\n\nexport class EasyDebridClient {\n  private apiClient: AxiosInstance;\n  constructor(private readonly options: EasyDebridClientOptions) {\n    options.env = options.env || \"production\";\n    const baseUrl = getApiUrl(options.env);\n    this.apiClient = axios.create({\n      baseURL: baseUrl,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${this.options.accessToken}`,\n      },\n    });\n  }\n\n  async getAccountInfo(): Promise<EasyDebridGetUserDetailsResponse> {\n    try {\n      const { data } =\n        await this.apiClient.get<EasyDebridGetUserDetailsResponseAPI>(\n          \"/user/details\",\n        );\n\n      const paidUntil = data?.paid_until\n        ? new Date(data.paid_until * 1000)\n        : null;\n\n      const transformedData: EasyDebridGetUserDetailsResponse = {\n        ...data,\n        paid_until: paidUntil,\n      };\n\n      return transformedData;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async submitCoupon(coupon: string): Promise<EasyDebridCouponSubmitResponse> {\n    try {\n      const { data } =\n        await this.apiClient.post<EasyDebridCouponSubmitResponse>(\n          \"/coupon/submit\",\n          { coupon },\n        );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async linkLookup(urls: string[]): Promise<EasyDebridLinkLookupResponse> {\n    try {\n      const { data } = await this.apiClient.post<EasyDebridLinkLookupResponse>(\n        \"/link/lookup\",\n        { urls },\n      );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async linkLookupDetails(\n    urls: string[],\n  ): Promise<EasyDebridLinkLookupDetailsResponse> {\n    try {\n      const { data } = await this.apiClient.post<EasyDebridLinkLookupDetailsResponse>(\n        \"/link/lookupdetails\",\n        { urls },\n      );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async generateDebridLink(\n    url: string,\n  ): Promise<EasyDebridGenerateDebridLinkResponse> {\n    try {\n      const { data } =\n        await this.apiClient.post<EasyDebridGenerateDebridLinkResponse>(\n          \"/link/generate\",\n          { url },\n        );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n}\n","import { isAxiosError } from \"axios\";\n\nexport class EasyDebridError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport const toEasyDebridError = (error: unknown) => {\n  if (isAxiosError(error)) {\n    throw new EasyDebridError(\n      error.response?.data.message || error.message,\n    );\n  }\n\n  if (error instanceof Error) {\n    throw new EasyDebridError(error.message);\n  }\n\n  throw new EasyDebridError(\"An unknown error occurred\");\n}\n","export const PROD_HOST = \"https://easydebrid.com\";\nexport const DEV_HOST = \"https://dev.easydebrid.com\";\n\nexport function getHost(env: string): string {\n  return env === \"production\" ? PROD_HOST : DEV_HOST;\n}\n\nexport function getApiUrl(env: string): string {\n  return `${getHost(env)}/api/v1`;\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport { toEasyDebridError } from \"./errors\";\nimport { getHost } from \"./utils\";\n\nexport interface EasyDebridOauth2Options {\n  clientId: string;\n  clientSecret?: string;\n  env?: \"production\" | \"sandbox\";\n}\n\nexport interface Oauth2TokenResponse {\n  token_type: string;\n  expires_in: number;\n  access_token: string;\n  scope: string;\n}\n\nexport const VALID_SCOPES = [\"full\"] as const;\nexport type EasyDebridScope = (typeof VALID_SCOPES)[number];\n\nexport class EasyDebridOauth2Client {\n  private readonly apiClient: AxiosInstance;\n  private readonly serviceUrl: string;\n\n  constructor(private readonly options: EasyDebridOauth2Options) {\n    options.env = options.env || \"production\";\n    this.serviceUrl = getHost(options.env);\n    this.apiClient = axios.create({\n      baseURL: this.serviceUrl,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  generateAuthorizationUrl(\n    redirectUri: string,\n    codeChallenge: string,\n    codeChallengeMethod: string,\n    state?: string,\n    scopes?: EasyDebridScope[],\n  ) {\n    const params = new URLSearchParams();\n\n    params.append(\"response_type\", \"code\");\n    params.append(\"client_id\", this.options.clientId);\n    params.append(\"redirect_uri\", redirectUri);\n    params.append(\"code_challenge\", codeChallenge);\n    params.append(\"code_challenge_method\", codeChallengeMethod);\n\n    if (state) {\n      params.append(\"state\", state);\n    }\n\n    if (scopes) {\n      params.append(\"scope\", scopes.join(\" \"));\n    }\n\n    return `${this.serviceUrl}/oauth/authorize?${params.toString()}`;\n  }\n\n  async exchangeCodeForToken(\n    code: string,\n    redirectUri: string,\n    codeVerifier: string,\n  ): Promise<Oauth2TokenResponse> {\n    const params = new URLSearchParams();\n\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectUri);\n    params.append(\"code_verifier\", codeVerifier);\n\n    if (this.options.clientSecret) {\n      params.append(\"client_secret\", this.options.clientSecret);\n    }\n\n    try {\n      const { data } = await this.apiClient.post<Oauth2TokenResponse>(\n        \"/oauth/token\",\n        params,\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n        },\n      );\n\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport { toEasyDebridError } from \"./errors\";\nimport { getApiUrl } from \"./utils\";\n\nexport interface EasyDebridGetResellerPricesResponse {\n  prices: Price[];\n}\n\nexport interface Price {\n  price: number;\n  days: number;\n}\n\nexport interface EasyDebridTopupResellerBalanceResponse {\n  url: string;\n}\n\nexport interface EasyDebridGetResellerBalanceResponse {\n  balance: number;\n}\n\nexport interface EasyDebridGenerateResellerCouponResponse {\n  coupon: string;\n}\n\nexport interface EasyDebridListResellerCouponsResponseAPI {\n  coupons: CouponAPI[];\n}\n\nexport interface CouponAPI {\n  coupon: string;\n  days: number;\n  created: string;\n  expires: string;\n}\n\nexport interface EasyDebridListResellerCouponsResponse {\n  coupons: Coupon[];\n}\n\nexport interface Coupon {\n  coupon: string;\n  days: number;\n  created: Date;\n  expires: Date;\n}\n\nexport interface EasyDebridMerchantOptions {\n  apiKey?: string;\n  env?: \"production\" | \"sandbox\";\n}\n\nexport class EasyDebridMerchant {\n  private apiClient: AxiosInstance;\n  constructor(private readonly options: EasyDebridMerchantOptions) {\n    options.env = options.env || \"production\";\n    const baseUrl = getApiUrl(options.env);\n    this.apiClient = axios.create({\n      baseURL: baseUrl,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${this.options.apiKey}`,\n      },\n    });\n  }\n\n  async getResellerPrices(): Promise<EasyDebridGetResellerPricesResponse> {\n    try {\n      const { data } =\n        await this.apiClient.get<EasyDebridGetResellerPricesResponse>(\n          \"/reseller/prices\",\n        );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async topupResellerBalance(amount: number): Promise<EasyDebridTopupResellerBalanceResponse> {\n    try {\n      const { data } =\n        await this.apiClient.post<EasyDebridTopupResellerBalanceResponse>(\n          \"/reseller/topup\",\n          { amount },\n        );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async getResellerBalance(): Promise<EasyDebridGetResellerBalanceResponse> {\n    try {\n      const { data } =\n        await this.apiClient.get<EasyDebridGetResellerBalanceResponse>(\n          \"/reseller/balance\",\n        );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async generateResellerCoupon(days: number): Promise<EasyDebridGenerateResellerCouponResponse> {\n    try {\n      const { data } =\n        await this.apiClient.post<EasyDebridGenerateResellerCouponResponse>(\n          \"/reseller/generatecoupon\",\n          { days },\n        );\n      return data;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n\n  async listResellerCoupons(): Promise<EasyDebridListResellerCouponsResponse> {\n    try {\n      const { data } =\n        await this.apiClient.get<EasyDebridListResellerCouponsResponseAPI>(\n          \"/reseller/coupons\",\n        );\n\n      const transformedData: EasyDebridListResellerCouponsResponse = {\n        coupons: data.coupons.map((coupon) => ({\n          ...coupon,\n          created: new Date(coupon.created),\n          expires: new Date(coupon.expires),\n        })),\n      };\n\n      return transformedData;\n    } catch (error) {\n      return toEasyDebridError(error);\n    }\n  }\n}\n"],"mappings":"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","names":["import_axios","axios","import_axios","axios","import_axios","axios"]}