{"version":3,"file":"api-client.cjs.development.js","sources":["../src/test-utils/mocks.ts","../src/constants.ts","../src/resources/Account/types.ts","../src/resources/Files/types.ts","../src/utils/index.ts","../src/eventEmitter.ts","../src/interceptors/response/clientIPChangeEmitter.ts","../src/interceptors/response/errorEmitter.ts","../src/interceptors/response/responseFormatter.ts","../src/resources/Account/Account.ts","../src/resources/Auth/Auth.ts","../src/resources/Auth/OAuth.ts","../src/resources/DownloadLinks/DownloadLinks.ts","../src/resources/Sharing/Sharing.ts","../src/resources/Config.ts","../src/resources/Events/Events.ts","../src/resources/Family.ts","../src/resources/Files/File.ts","../src/resources/Files/Files.ts","../src/resources/FriendInvites/FriendInvites.ts","../src/resources/Friends/Friends.ts","../src/resources/IFTTT.ts","../src/resources/Payment/Payment.ts","../src/resources/RSS/RSS.ts","../src/resources/Transfers/Transfers.ts","../src/resources/Trash.ts","../src/resources/Tunnel.ts","../src/resources/User/User.ts","../src/resources/Zips.ts","../src/client/index.ts"],"sourcesContent":["import { AxiosError, AxiosRequestConfig } from 'axios'\nimport {\n  IPutioAPIClientError,\n  IPutioAPIClientErrorData,\n  IPutioAPIClientResponse,\n} from '../client/types'\n\nconst mockRequestConfig: AxiosRequestConfig = {}\n\nexport const mockPutioAPIClientResponse: IPutioAPIClientResponse<{\n  foo: string\n}> = {\n  config: mockRequestConfig,\n  data: { foo: 'bar', status: 'OK' },\n  headers: {\n    'x-trace-id': 'MOCK_TRACE_ID',\n  },\n  status: 200,\n  statusText: 'ok',\n}\n\nexport const mockAxiosError: AxiosError = {\n  config: mockRequestConfig,\n  isAxiosError: true,\n  name: 'AXIOS_ERROR',\n  message: 'AXIOS_ERROR_MESSAGE',\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    }\n  },\n}\n\nexport const mockPutioAPIClientError: IPutioAPIClientError = {\n  ...mockAxiosError,\n  data: {\n    error_type: 'MOCK_ERROR',\n    error_message: 'MOCK_MESSAGE',\n    status_code: 0,\n    extra: { foo: 'bar' },\n  },\n  toJSON() {\n    return this.data\n  },\n}\n\nexport const createMockResponse = <T>(\n  data: T,\n  status: number = 200,\n): IPutioAPIClientResponse<T> => ({\n  config: mockRequestConfig,\n  data: { ...data, status: 'OK' },\n  status,\n  headers: {},\n  statusText: 'ok',\n})\n\nexport const createMockErrorResponse = (\n  data: IPutioAPIClientErrorData,\n): IPutioAPIClientError => ({\n  ...mockAxiosError,\n  data,\n  toJSON() {\n    return this.data\n  },\n})\n\nexport function createMockXMLHttpRequest(\n  readyState: number,\n  status: number,\n  responseText: string,\n) {\n  const xhr = new XMLHttpRequest()\n  return new Proxy(xhr, {\n    get(target, prop) {\n      if (prop === 'readyState') return readyState\n      if (prop === 'status') return status\n      if (prop === 'responseText') return responseText\n      // @ts-ignore\n      return target[prop]\n    },\n  })\n}\n","import { IPutioAPIClientOptions } from './client/types'\n\nexport const DEFAULT_CLIENT_OPTIONS: IPutioAPIClientOptions = {\n  baseURL: 'https://api.put.io/v2',\n  clientID: 1,\n  webAppURL: 'https://app.put.io',\n}\n","export interface IAccountSettings {\n  beta_user: boolean\n  callback_url: string\n  dark_theme: boolean\n  default_download_folder: number\n  disable_subtitles: boolean\n  dont_autoselect_subtitles: boolean\n  fluid_layout: boolean\n  hide_subtitles: boolean\n  history_enabled: boolean\n  is_invisible: boolean\n  locale: string\n  login_mails_enabled: boolean\n  next_episode: boolean\n  pushover_token: string | null\n  show_optimistic_usage: boolean\n  sort_by: string\n  start_from: boolean\n  subtitle_languages: [string | null, string | null]\n  theater_mode: boolean\n  theme: 'dark' | 'light' | 'auto'\n  transfer_sort_by: string\n  trash_enabled: boolean\n  tunnel_route_name: null | string\n  two_factor_enabled: boolean\n  use_private_download_ip: boolean\n  use_start_from: boolean\n  video_player: 'html5' | 'flash' | null\n}\n\nexport type SaveAccountSettingsPayload =\n  | Partial<IAccountSettings>\n  | { username: string }\n  | {\n      mail: string\n      current_password: string\n    }\n  | {\n      password: string\n      current_password: string\n    }\n  | {\n      two_factor_enabled: {\n        enable: boolean\n        code: string\n      }\n    }\n\nexport interface IAccountInfo {\n  account_status: 'active' | 'inactive' | 'stranger'\n  avatar_url: string\n  can_create_sub_account: boolean\n  disk: {\n    avail: number\n    used: number\n    size: number\n  }\n  download_token?: string\n  family_owner?: string\n  features: Record<string, boolean>\n  files_will_be_deleted_at: string | null\n  is_admin: boolean\n  is_eligible_for_friend_invitation: boolean\n  is_sub_account: boolean\n  mail: string\n  monthly_bandwidth_usage: number\n  pas?: { user_hash: string }\n  password_last_changed_at: string | null\n  private_download_host_ip: string | null\n  settings: IAccountSettings\n  trash_size: number\n  user_hash: string\n  user_id: number\n  username: string\n  warnings: {\n    callback_url_has_failed?: boolean\n    pushover_token_has_failed?: boolean\n  }\n}\n\nexport interface IAccountConfirmation {\n  subject: 'mail_change' | 'password_change' | 'subscription_upgrade'\n  created_at: string\n}\n\nexport const ACCOUNT_CLEAR_OPTION_KEYS = [\n  'files',\n  'finished_transfers',\n  'active_transfers',\n  'rss_feeds',\n  'rss_logs',\n  'history',\n  'trash',\n  'friends',\n] as const\n\nexport type AccountInfoParams = {\n  download_token?: 0 | 1\n  sharing?: 0 | 1\n  features?: 0 | 1\n  intercom?: 0 | 1\n  pas?: 0 | 1\n  profitwell?: 0 | 1\n  platform?: string\n}\n\nexport type AccountClearOptions = Record<\n  typeof ACCOUNT_CLEAR_OPTION_KEYS[number],\n  boolean\n>\n","export type FileType =\n  | 'FOLDER'\n  | 'FILE'\n  | 'AUDIO'\n  | 'VIDEO'\n  | 'IMAGE'\n  | 'ARCHIVE'\n  | 'PDF'\n  | 'TEXT'\n  | 'SWF'\n\nexport const FileSortOptions = {\n  NAME_ASC: 'NAME_ASC',\n  NAME_DESC: 'NAME_DESC',\n  SIZE_ASC: 'SIZE_ASC',\n  SIZE_DESC: 'SIZE_DESC',\n  DATE_ASC: 'DATE_ASC',\n  DATE_DESC: 'DATE_DESC',\n  MODIFIED_ASC: 'MODIFIED_ASC',\n  MODIFIED_DESC: 'MODIFIED_DESC',\n} as const\n\nexport type FileSortOption = typeof FileSortOptions[keyof typeof FileSortOptions]\n\nexport interface IFile extends Record<string, any> {\n  id: number\n  parent_id: number\n  name: string\n  size: number\n  file_type: FileType\n  content_type: string\n  extension: string\n  crc32: string\n  created_at: string\n}\n\nexport interface ISearchResponse {\n  files: IFile[]\n  total: number\n  cursor: string\n}\n\nexport interface IFileDeleteResponse {\n  skipped: number\n  cursor: string\n}\n\nexport type FileConversionStatus = { id: IFile['id'] } & (\n  | { status: 'NOT_AVAILABLE' }\n  | { status: 'IN_QUEUE' }\n  | { status: 'CONVERTING'; percent_done: number }\n  | { status: 'COMPLETED'; size: IFile['size'] }\n  | { status: 'ERROR' }\n)\n","import { IPutioAPIClientError, IPutioAPIClientErrorData } from '../client/types'\n\nexport const identity = <T>(arg: T) => arg\n\nexport const isPutioAPIErrorResponse = (\n  input: unknown,\n): input is IPutioAPIClientErrorData =>\n  typeof input === 'object' &&\n  !!input &&\n  !!(input as Record<string, unknown>).error_type\n\nexport const isPutioAPIError = (\n  input: unknown,\n): input is IPutioAPIClientError =>\n  typeof input === 'object' &&\n  !!input &&\n  !!(input as Record<string, unknown>).data &&\n  isPutioAPIErrorResponse((input as Record<string, unknown>).data)\n\nexport const createFormDataFromObject = (obj: Record<string, unknown>) => {\n  return Object.keys(obj).reduce((data, key) => {\n    data.append(key, obj[key] as string | Blob)\n    return data\n  }, new FormData())\n}\n","import EventEmitter from 'event-emitter'\n\nexport { EventListener } from 'event-emitter'\n\nexport const EVENTS = {\n  ERROR: 'ERROR',\n  CLIENT_IP_CHANGED: 'CLIENT_IP_CHANGED',\n} as const\n\nexport type PutioAPIClientEventTypes = typeof EVENTS[keyof typeof EVENTS]\n\nexport const eventEmitter = EventEmitter()\n","import { AxiosResponse } from 'axios'\nimport { PutioAPIClientResponseInterceptorFactory } from '../../client/types'\nimport { eventEmitter, EVENTS } from '../../eventEmitter'\n\nconst IP_HEADER_KEY = 'putio-client-ip'\n\nexport const createClientIPChangeEmitter: PutioAPIClientResponseInterceptorFactory = () => {\n  let IP: string = ''\n\n  const checkIP = (response: AxiosResponse) => {\n    const newIP = response.headers[IP_HEADER_KEY]\n\n    if (!IP) {\n      IP = newIP\n      return\n    }\n\n    if (newIP && IP !== newIP) {\n      eventEmitter.emit(EVENTS.CLIENT_IP_CHANGED, { IP, newIP })\n      IP = newIP\n      return\n    }\n  }\n\n  return {\n    onFulfilled: response => {\n      checkIP(response)\n      return response\n    },\n\n    onRejected: error => {\n      if (error.response) {\n        checkIP(error.response)\n      }\n\n      return Promise.reject(error)\n    },\n  }\n}\n","import { PutioAPIClientResponseInterceptorFactory } from '../../client/types'\nimport { identity } from '../../utils'\nimport { eventEmitter, EVENTS } from '../../eventEmitter'\n\nexport const createErrorEmitter: PutioAPIClientResponseInterceptorFactory = () => ({\n  onFulfilled: identity,\n\n  onRejected: error => {\n    eventEmitter.emit(EVENTS.ERROR, error)\n    return Promise.reject(error)\n  },\n})\n","import axios from 'axios'\nimport {\n  IPutioAPIClientError,\n  IPutioAPIClientErrorData,\n  PutioAPIClientResponseInterceptorFactory,\n} from '../../client/types'\nimport { isPutioAPIErrorResponse } from '../../utils'\n\nexport const createResponseFormatter: PutioAPIClientResponseInterceptorFactory = () => ({\n  onFulfilled: response => ({\n    ...response,\n    body: response.data,\n  }),\n\n  onRejected: (error: unknown) => {\n    if (!axios.isAxiosError(error)) {\n      return Promise.reject(error)\n    }\n\n    try {\n      let errorData: IPutioAPIClientErrorData = {\n        'x-trace-id': error.response?.headers['x-trace-id'],\n        error_message: error.message,\n        error_type: 'ERROR',\n        status_code: 0,\n        extra: {},\n      }\n\n      // ECONNABORTED is the code for a request that timed out in axios.\n      if (error.code === 'ECONNABORTED') {\n        errorData = {\n          ...errorData,\n          status_code: 408,\n          error_message: 'Request timed out',\n        }\n      }\n\n      if (error.response && error.response.data) {\n        const { status, data } = error.response\n        errorData = isPutioAPIErrorResponse(data)\n          ? {\n              ...errorData,\n              ...data,\n              status_code: status,\n            }\n          : {\n              ...errorData,\n              status_code: status,\n            }\n      } else if (\n        error.request instanceof XMLHttpRequest &&\n        error.request.readyState === 4\n      ) {\n        const { status, responseText } = error.request\n        const data = JSON.parse(responseText)\n\n        errorData = {\n          ...errorData,\n          ...data,\n          status_code: status,\n        }\n      }\n\n      const formattedError: IPutioAPIClientError = {\n        ...error,\n        data: errorData,\n        toJSON: () => errorData,\n      }\n\n      return Promise.reject(formattedError)\n    } catch (e) {\n      return Promise.reject(error)\n    }\n  },\n})\n","import { PutioAPIClient } from '../../client'\nimport {\n  IAccountInfo,\n  AccountInfoParams,\n  IAccountSettings,\n  SaveAccountSettingsPayload,\n  IAccountConfirmation,\n  AccountClearOptions,\n} from './types'\n\nexport default class Account {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Info(params: AccountInfoParams = {}) {\n    return this.client.get<{ info: IAccountInfo }>('/account/info', {\n      params,\n    })\n  }\n\n  public Settings() {\n    return this.client.get<{ settings: IAccountSettings }>('/account/settings')\n  }\n\n  public SaveSettings(payload: SaveAccountSettingsPayload) {\n    return this.client.post('/account/settings', {\n      data: payload,\n    })\n  }\n\n  public Clear(options: AccountClearOptions) {\n    return this.client.post<{}>('/account/clear', {\n      data: options,\n    })\n  }\n\n  public Destroy(currentPassword: string) {\n    return this.client.post<{}>('/account/destroy', {\n      data: {\n        current_password: currentPassword,\n      },\n    })\n  }\n\n  public Confirmations(type?: IAccountConfirmation['subject']) {\n    return this.client.get<{ confirmations: IAccountConfirmation[] }>(\n      '/account/confirmation/list',\n      {\n        data: {\n          type,\n        },\n      },\n    )\n  }\n}\n","import { Base64 } from 'js-base64'\nimport URI from 'urijs'\nimport { PutioAPIClient } from '../../client'\nimport {\n  IGenerateTOTPResponse,\n  ILoginResponse,\n  IVerifyTOTPResponse,\n  IValidateTokenResponse,\n  OAuthApp,\n  OAuthAppSession,\n  TwoFactorRecoveryCodes,\n} from './types'\n\nclass TwoFactor {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public GenerateTOTP() {\n    return this.client.post<IGenerateTOTPResponse>('/two_factor/generate/totp')\n  }\n\n  public VerifyTOTP(twoFactorScopedToken: string, code: string) {\n    return this.client.post<IVerifyTOTPResponse>('/two_factor/verify/totp', {\n      params: { oauth_token: twoFactorScopedToken },\n      data: { code },\n    })\n  }\n\n  public GetRecoveryCodes() {\n    return this.client.get<{ recovery_codes: TwoFactorRecoveryCodes }>(\n      '/two_factor/recovery_codes',\n    )\n  }\n\n  public RegenerateRecoveryCodes() {\n    return this.client.post<{ recovery_codes: TwoFactorRecoveryCodes }>(\n      '/two_factor/recovery_codes/refresh',\n    )\n  }\n}\n\nexport default class Auth {\n  private client: PutioAPIClient\n\n  public TwoFactor: TwoFactor\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n    this.TwoFactor = new TwoFactor(client)\n  }\n\n  public GetLoginURL({\n    redirectURI,\n    responseType = 'token',\n    state,\n    clientID,\n    clientName,\n  }: {\n    redirectURI: string\n    responseType: string\n    state: string\n    clientID: string\n    clientName?: string\n  }): string {\n    const { options } = this.client\n\n    const url = new URI(`${options.webAppURL}/authenticate`).addQuery({\n      client_id: clientID || options.clientID,\n      client_name: clientName,\n      redirect_uri: redirectURI,\n      response_type: responseType,\n      isolated: 1,\n      state,\n    })\n\n    return url.toString()\n  }\n\n  public Login({\n    username,\n    password,\n    app,\n  }: {\n    username: string\n    password: string\n    app: {\n      client_id: string\n      client_secret: string\n    }\n  }) {\n    return this.client.put<ILoginResponse>(\n      `/oauth2/authorizations/clients/${app.client_id}?client_secret=${app.client_secret}`,\n      {\n        headers: {\n          Authorization: `Basic ${Base64.encode(`${username}:${password}`)}`,\n        },\n      },\n    )\n  }\n\n  public Logout() {\n    return this.client.post('/oauth/grants/logout')\n  }\n\n  public Register(data: any) {\n    return this.client.post('/registration/register', {\n      data: {\n        client_id: this.client.options.clientID,\n        ...data,\n      },\n    })\n  }\n\n  public Exists(key: string, value: string) {\n    return this.client.get(`/registration/exists/${key}`, {\n      params: { value },\n    })\n  }\n\n  public GetVoucher(code: string) {\n    return this.client.get(`/registration/voucher/${code}`)\n  }\n\n  public GetGiftCard(code: string) {\n    return this.client.get(`/registration/gift_card/${code}`)\n  }\n\n  public GetFamilyInvite(code: string) {\n    return this.client.get(`/registration/family/${code}`)\n  }\n\n  public ForgotPassword(mail: string) {\n    return this.client.post('/registration/password/forgot', {\n      data: { mail },\n    })\n  }\n\n  public ResetPassword(key: string, newPassword: string) {\n    return this.client.post('/registration/password/reset', {\n      data: {\n        key,\n        password: newPassword,\n      },\n    })\n  }\n\n  public GetCode(clientID: number | string, clientName?: string) {\n    return this.client.get<{ code: string; qr_code_url: string }>(\n      '/oauth2/oob/code',\n      {\n        params: { app_id: clientID, client_name: clientName },\n      },\n    )\n  }\n\n  public CheckCodeMatch(code: string) {\n    return this.client.get<{ oauth_token: string | null }>(\n      `/oauth2/oob/code/${code}`,\n    )\n  }\n\n  public LinkDevice(code: string) {\n    return this.client.post<{ app: OAuthApp }>('/oauth2/oob/code', {\n      data: { code },\n    })\n  }\n\n  public Grants() {\n    return this.client.get<{ apps: OAuthApp[] }>('/oauth/grants/')\n  }\n\n  public RevokeApp(id: number) {\n    return this.client.post<{}>(`/oauth/grants/${id}/delete`)\n  }\n\n  public Clients() {\n    return this.client.get<{ clients: OAuthAppSession[] }>('/oauth/clients/')\n  }\n\n  public RevokeClient(id: string) {\n    return this.client.post<{}>(`/oauth/clients/${id}/delete`)\n  }\n\n  public RevokeAllClients() {\n    return this.client.post<{}>('/oauth/clients/delete-all')\n  }\n\n  public ValidateToken(token: string) {\n    return this.client.get<IValidateTokenResponse>('/oauth2/validate', {\n      params: { oauth_token: token },\n    })\n  }\n}\n","import URI from 'urijs'\nimport { createFormDataFromObject } from '../../utils'\nimport { PutioAPIClient } from '../../client'\nimport { MyOAuthApp, PopularOAuthApp } from './types'\n\nexport default class OAuth {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public GetAuthorizeURL(query: object = {}): string {\n    const {\n      token,\n      options: { baseURL },\n    } = this.client\n\n    const uri = new URI(`${baseURL}/oauth2/authorize`).addQuery({\n      ...query,\n      oauth_token: token,\n    })\n\n    return uri.toString()\n  }\n\n  public Query() {\n    return this.client.get<{ apps: MyOAuthApp[] }>('/oauth/apps')\n  }\n\n  public Get(id: MyOAuthApp['id']) {\n    return this.client.get<{ app: MyOAuthApp; token: string }>(\n      `/oauth/apps/${id}`,\n    )\n  }\n\n  public GetIconURL(id: MyOAuthApp['id']): string {\n    const {\n      token,\n      options: { baseURL },\n    } = this.client\n\n    return `${baseURL}/oauth/apps/${id}/icon?oauth_token=${token}`\n  }\n\n  public SetIcon(id: MyOAuthApp['id'], data: object) {\n    return this.client.post(`/oauth/apps/${id}/icon`, { data })\n  }\n\n  public Create(app: Omit<MyOAuthApp, 'id'>) {\n    return this.client.post<{ app: MyOAuthApp }>('/oauth/apps/register', {\n      data: createFormDataFromObject(app),\n    })\n  }\n\n  public Update(app: MyOAuthApp) {\n    return this.client.post<{ app: MyOAuthApp }>(`/oauth/apps/${app.id}`, {\n      data: createFormDataFromObject(app),\n    })\n  }\n\n  public Delete(id: MyOAuthApp['id']) {\n    return this.client.post(`/oauth/apps/${id}/delete`)\n  }\n\n  public RegenerateToken(id: MyOAuthApp['id']) {\n    return this.client.post<{ access_token: string }>(\n      `/oauth/apps/${id}/regenerate_token`,\n    )\n  }\n\n  public GetPopularApps() {\n    return this.client.get<{ apps: PopularOAuthApp[] }>('/oauth/apps/popular')\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport {\n  IDownloadLinksCreateResponse,\n  IDownloadLinksInfoResponse,\n} from './types'\n\nexport default class DownloadLinks {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Create({\n    ids = [],\n    cursor,\n    excludeIds = [],\n  }: {\n    ids?: number[]\n    cursor?: string\n    excludeIds?: number[]\n  }) {\n    return this.client.post<IDownloadLinksCreateResponse>(\n      '/download_links/create',\n      {\n        data: {\n          file_ids: ids.join(','),\n          exclude_ids: excludeIds.join(','),\n          cursor,\n        },\n      },\n    )\n  }\n\n  public Get(downloadLinksId: number) {\n    return this.client.get<IDownloadLinksInfoResponse>(\n      `/download_links/${downloadLinksId}`,\n    )\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport { ISharingCloneResponse, ISharingCloneInfoResponse } from './types'\n\nexport default class Sharing {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Clone({\n    ids = [],\n    cursor,\n    excludeIds = [],\n    parentId = 0,\n  }: {\n    ids?: number[]\n    cursor?: string\n    excludeIds?: number[]\n    parentId?: number\n  }) {\n    return this.client.post<ISharingCloneResponse>('/sharing/clone', {\n      data: {\n        file_ids: ids.join(','),\n        exclude_ids: excludeIds.join(','),\n        parent_id: parentId,\n        cursor,\n      },\n    })\n  }\n\n  public CloneInfo(cloneInfoId: number) {\n    return this.client.get<ISharingCloneInfoResponse>(\n      `/sharing/clone/${cloneInfoId}`,\n    )\n  }\n}\n","import { PutioAPIClient } from '../client'\n\nexport default class Config {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Read<Config>() {\n    return this.client.get<{ config: Config }>('/config')\n  }\n\n  public Write<Config>(config: Config) {\n    return this.client.put<{}>('/config', {\n      data: { config },\n    })\n  }\n\n  public GetKey<Config, Key extends keyof Config>(key: Key) {\n    return this.client.get<{ value: Config[Key] }>(`/config/${key}`)\n  }\n\n  public SetKey<Config, Key extends keyof Config>(\n    key: Key,\n    value: Config[Key],\n  ) {\n    return this.client.put<{}>(`/config/${key}`, {\n      data: { value },\n    })\n  }\n\n  public DeleteKey<Config, Key extends keyof Config>(key: Key) {\n    return this.client.delete<{}>(`/config/${key}`)\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport {\n  IHistoryClearAllEventsResponse,\n  IHistoryDeleteEventResponse,\n  IHistoryResponse,\n} from './types'\n\nexport default class PutioEvents {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Query() {\n    return this.client.get<IHistoryResponse>('/events/list')\n  }\n\n  public Delete(id: number) {\n    return this.client.post<IHistoryDeleteEventResponse>(`/events/delete/${id}`)\n  }\n\n  public Clear() {\n    return this.client.post<IHistoryClearAllEventsResponse>('/events/delete')\n  }\n}\n","import { PutioAPIClient } from '../client'\n\nexport default class Family {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public GetInvites() {\n    return this.client.get('/family/invites')\n  }\n\n  public CreateInvite() {\n    return this.client.post('/family/sub_account')\n  }\n\n  public DeleteMember(username: string) {\n    return this.client.delete(`/family/sub_account/${username}`)\n  }\n\n  public Join(invitationCode: string) {\n    return this.client.post(`/family/join/${invitationCode}`)\n  }\n}\n","import URI from 'urijs'\nimport { PutioAPIClient } from '../../client'\nimport { FileConversionStatus } from './types'\nexport default class File {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Public(\n    oauthToken: string,\n    {\n      mp4StatusParent = 1,\n      videoMetadataParent = 1,\n      codecsParent = 1,\n      mediaInfoParent = 1,\n    } = {},\n  ) {\n    return this.client.get('/files/public', {\n      params: {\n        codecs_parent: codecsParent,\n        media_info_parent: mediaInfoParent,\n        mp4_status_parent: mp4StatusParent,\n        mp4_stream_url_parent: 1,\n        oauth_token: oauthToken,\n        stream_url_parent: 1,\n        video_metadata_parent: videoMetadataParent,\n      },\n    })\n  }\n\n  public Download(fileId: number) {\n    return this.client.get(`/files/${fileId}/download`)\n  }\n\n  public GetStorageURL(fileId: number) {\n    return this.client.get(`/files/${fileId}/url`)\n  }\n\n  public GetContent(fileId: number) {\n    return this.client.get(`/files/${fileId}/stream`)\n  }\n\n  public Subtitles(fileId: number, oauthToken: string, languages: string[]) {\n    return this.client.get(`/files/${fileId}/subtitles`, {\n      params: {\n        languages,\n        oauth_token: oauthToken,\n      },\n    })\n  }\n\n  public GetHLSStreamURL(\n    fileId: number,\n    {\n      token = '',\n      subtitleLanguages = [],\n      maxSubtitleCount,\n      playOriginal,\n    }: {\n      token?: string\n      subtitleLanguages?: string[]\n      maxSubtitleCount?: number\n      playOriginal?: boolean\n    } = {},\n  ) {\n    return new URI(\n      `${this.client.options.baseURL}/files/${fileId}/hls/media.m3u8`,\n    )\n      .addQuery({\n        oauth_token: token || this.client.token,\n        subtitle_languages: subtitleLanguages,\n        max_subtitle_count: maxSubtitleCount,\n        original:\n          typeof playOriginal === 'boolean'\n            ? playOriginal\n              ? 1\n              : 0\n            : undefined,\n      })\n      .toString()\n  }\n\n  public ConvertToMp4(fileId: number) {\n    return this.client.post<{ mp4: FileConversionStatus }>(\n      `/files/${fileId}/mp4`,\n    )\n  }\n\n  public ConvertStatus(fileId: number) {\n    return this.client.get<{ mp4: FileConversionStatus }>(\n      `/files/${fileId}/mp4`,\n    )\n  }\n\n  public DeleteMp4(fileId: number) {\n    return this.client.delete<{}>(`/files/${fileId}/mp4`)\n  }\n\n  public SharedWith(fileId: number) {\n    return this.client.get(`/files/${fileId}/shared-with`)\n  }\n\n  public Unshare(fileId: number, shareId: any) {\n    let shares = shareId\n\n    if (shares) {\n      shares = Array.isArray(shares)\n        ? shares.map(i => i.toString())\n        : [shares.toString()]\n      shares = shares.join(',')\n    }\n\n    return this.client.post(`/files/${fileId}/unshare`, {\n      data: {\n        shares: shares || 'everyone',\n      },\n    })\n  }\n\n  public SaveAsMp4(fileId: number) {\n    return this.client.get(`/files/${fileId}/put-mp4-to-my-folders`)\n  }\n\n  public Rename(fileId: number, name: string) {\n    return this.client.post('/files/rename', {\n      data: {\n        file_id: fileId,\n        name,\n      },\n    })\n  }\n\n  public GetStartFrom(fileId: number) {\n    return this.client.get<{ start_from: number }>(\n      `/files/${fileId}/start-from`,\n    )\n  }\n\n  public SetStartFrom(fileId: number, time: string) {\n    return this.client.post(`/files/${fileId}/start-from/set`, {\n      data: {\n        time: parseInt(time, 10),\n      },\n    })\n  }\n\n  public ResetStartFrom(fileId: number) {\n    return this.client.get(`/files/${fileId}/start-from/delete`)\n  }\n\n  public Extract(fileId: number, password?: string) {\n    return this.client.post('/files/extract', {\n      data: {\n        password,\n        user_file_ids: [fileId.toString()],\n      },\n    })\n  }\n\n  public CreatePublicLink(fileId: string) {\n    return this.client.post(`/files/${fileId}/share_public`)\n  }\n\n  public RevokePublicLink(id: number) {\n    return this.client.delete(`/files/public/list/${id}`)\n  }\n\n  public FindNextFile(fileId: number, fileType: string) {\n    return this.client.get(`/files/${fileId}/next-file`, {\n      params: { file_type: fileType },\n    })\n  }\n\n  public FindNextVideo(fileId: number) {\n    return this.client.get(`/files/${fileId}/next-video`)\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport {\n  FileSortOption,\n  FileType,\n  IFileDeleteResponse,\n  ISearchResponse,\n} from './types'\n\nexport default class Files {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Query(\n    id: number | string,\n    {\n      perPage,\n      sortBy,\n      contentType,\n      fileType,\n      streamUrl,\n      streamUrlParent,\n      mp4StreamUrl,\n      mp4StreamUrlParent,\n      hidden,\n      mp4Status,\n      mp4StatusParent,\n      videoMetadata,\n      videoMetadataParent,\n      codecsParent,\n      mediaInfoParent,\n      breadcrumbs,\n      total,\n    }: {\n      perPage?: number\n      sortBy?: FileSortOption\n      contentType?: string\n      fileType?: FileType\n      streamUrl?: boolean\n      streamUrlParent?: boolean\n      mp4StreamUrl?: boolean\n      mp4StreamUrlParent?: boolean\n      hidden?: boolean\n      mp4Status?: boolean\n      mp4StatusParent?: boolean\n      videoMetadata?: boolean\n      videoMetadataParent?: boolean\n      codecsParent?: boolean\n      mediaInfoParent?: boolean\n      breadcrumbs?: boolean\n      total?: boolean\n    } = {},\n  ) {\n    return this.client.get(\n      `/files/${id === 'friends' ? 'items-shared-with-you' : 'list'}`,\n      {\n        params: {\n          parent_id: id !== 'friends' ? id : null,\n          per_page: perPage,\n          sort_by: sortBy,\n          content_type: contentType,\n          file_type: fileType,\n          stream_url: streamUrl,\n          stream_url_parent: streamUrlParent,\n          mp4_stream_url: mp4StreamUrl,\n          mp4_stream_url_parent: mp4StreamUrlParent,\n          hidden,\n          mp4_status: mp4Status,\n          mp4_status_parent: mp4StatusParent,\n          video_metadata: videoMetadata,\n          video_metadata_parent: videoMetadataParent,\n          codecs_parent: codecsParent,\n          media_info_parent: mediaInfoParent,\n          breadcrumbs,\n          total,\n        },\n      },\n    )\n  }\n\n  public Continue(cursor: string, { perPage }: { perPage?: number } = {}) {\n    return this.client.post('/files/list/continue', {\n      data: {\n        cursor,\n      },\n      params: {\n        per_page: perPage,\n      },\n    })\n  }\n\n  public Search(\n    query: string,\n    {\n      perPage,\n      fileType,\n    }: { perPage: number; fileType?: FileType | FileType[] } = { perPage: 50 },\n  ) {\n    return this.client.get<ISearchResponse>('/files/search', {\n      params: {\n        query,\n        per_page: perPage,\n        type: fileType,\n      },\n    })\n  }\n\n  public ContinueSearch(\n    cursor: string,\n    { perPage }: { perPage?: number } = {},\n  ) {\n    return this.client.post<ISearchResponse>('/files/search/continue', {\n      data: {\n        cursor,\n      },\n      params: {\n        per_page: perPage,\n      },\n    })\n  }\n\n  public NewFolder(name: string, parentId: number = 0) {\n    return this.CreateFolder({ name, parentId })\n  }\n\n  public CreateFolder({\n    name,\n    parentId,\n    path,\n  }: {\n    name: string\n    parentId?: number\n    path?: string\n  }) {\n    return this.client.post('/files/create-folder', {\n      data: {\n        name,\n        parent_id: parentId,\n        path,\n      },\n    })\n  }\n\n  public DeleteAll(\n    cursor: string,\n    excludeIds: number[] = [],\n    {\n      partialDelete = false,\n      skipTrash,\n    }: {\n      partialDelete?: boolean\n      skipTrash?: boolean\n    },\n  ) {\n    return this.client.post<IFileDeleteResponse>('/files/delete', {\n      data: {\n        cursor,\n        exclude_ids: excludeIds.join(','),\n      },\n      params: {\n        skip_nonexistents: true,\n        partial_delete: partialDelete,\n        skip_trash: skipTrash,\n      },\n    })\n  }\n\n  public Delete(\n    ids: number[] = [],\n    {\n      ignoreFileOwner = false,\n      partialDelete = false,\n      skipTrash,\n    }: {\n      ignoreFileOwner?: boolean\n      partialDelete?: boolean\n      skipTrash?: boolean\n    } = {},\n  ) {\n    return this.client.post<IFileDeleteResponse>('/files/delete', {\n      data: {\n        file_ids: ids.join(','),\n      },\n      params: {\n        skip_nonexistents: true,\n        skip_owner_check: ignoreFileOwner,\n        partial_delete: partialDelete,\n        skip_trash: skipTrash,\n      },\n    })\n  }\n\n  public Extract({\n    ids = [],\n    cursor,\n    excludeIds = [],\n  }: {\n    ids?: number[]\n    cursor?: string\n    excludeIds?: number[]\n  }) {\n    return this.client.post('/files/extract', {\n      data: {\n        user_file_ids: ids.join(','),\n        exclude_ids: excludeIds.join(','),\n        cursor,\n      },\n    })\n  }\n\n  public ExtractStatus() {\n    return this.client.get('/files/extract')\n  }\n\n  public Share({\n    ids = [],\n    cursor,\n    excludeIds = [],\n    friends,\n  }: {\n    ids?: number[]\n    cursor?: string\n    excludeIds?: number[]\n    friends: any\n  }) {\n    return this.client.post('/files/share', {\n      data: {\n        cursor,\n        friends,\n        file_ids: ids.join(','),\n        exclude_ids: excludeIds.join(','),\n      },\n    })\n  }\n\n  public Move(ids: number[], to: number) {\n    return this.client.post('/files/move', {\n      data: {\n        file_ids: ids.join(','),\n        parent_id: to,\n      },\n    })\n  }\n\n  public MoveAll({\n    cursor,\n    excludeIds = [],\n    to,\n  }: {\n    cursor?: string\n    excludeIds?: number[]\n    to: number\n  }) {\n    return this.client.post('/files/move', {\n      data: {\n        cursor,\n        parent_id: to,\n        exclude_ids: excludeIds.join(','),\n      },\n    })\n  }\n\n  public ConvertToMp4({\n    ids = [],\n    cursor,\n    excludeIds = [],\n  }: {\n    ids?: number[]\n    cursor?: string\n    excludeIds?: number[]\n  }) {\n    return this.client.post('/files/convert_mp4', {\n      data: {\n        file_ids: ids.join(','),\n        exclude_ids: excludeIds.join(','),\n        cursor,\n      },\n    })\n  }\n\n  public SharedOnes() {\n    return this.client.get('/files/shared')\n  }\n\n  public PublicShares() {\n    return this.client.get('/files/public/list')\n  }\n\n  public SetWatchStatus({\n    ids = [],\n    cursor,\n    excludeIds = [],\n    watched,\n  }: {\n    ids?: number[]\n    cursor?: string\n    excludeIds?: number[]\n    watched: boolean\n  }) {\n    return this.client.post('/files/watch-status', {\n      data: {\n        file_ids: ids.join(','),\n        exclude_ids: excludeIds.join(','),\n        cursor,\n        watched,\n      },\n    })\n  }\n\n  public Upload({\n    file,\n    fileName,\n    parentId = 0,\n  }: {\n    file: any\n    fileName?: string\n    parentId?: number\n  }) {\n    const form = new FormData()\n    form.append('file', file)\n\n    if (fileName) {\n      form.append('filename', fileName)\n    }\n\n    if (parentId) {\n      form.append('parent_id', parentId.toString())\n    }\n\n    return this.client.post('/files/upload', {\n      data: form,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport { IFriendInvitesCreateResponse, IFriendInvitesResponse } from './types'\n\nexport default class FriendInvites {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public GetAll() {\n    return this.client.get<IFriendInvitesResponse>('/account/friend_invites')\n  }\n\n  public Create() {\n    return this.client.post<IFriendInvitesCreateResponse>(\n      '/account/create_friend_invitation',\n    )\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport { IFriendListResponse, IUserSearchResponse } from './types'\n\nexport default class Friends {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Query() {\n    return this.client.get<IFriendListResponse>('/friends/list')\n  }\n\n  public Search(username: string) {\n    return this.client.get<IUserSearchResponse>(\n      `/friends/user-search/${username}`,\n    )\n  }\n\n  public WaitingRequests() {\n    return this.client.get('/friends/waiting-requests')\n  }\n\n  public WaitingRequestsCount() {\n    return this.client.get('/friends/waiting-requests-count')\n  }\n\n  public SendFrienshipRequest(username: string) {\n    return this.client.post(`/friends/${username}/request`)\n  }\n\n  public Remove(username: string) {\n    return this.client.post(`/friends/${username}/unfriend`)\n  }\n\n  public Approve(username: string) {\n    return this.client.post(`/friends/${username}/approve`)\n  }\n\n  public Deny(username: string) {\n    return this.client.post(`/friends/${username}/deny`)\n  }\n\n  public SharedFolder(username: string) {\n    return this.client.get(`/friends/${username}/files`)\n  }\n}\n","import { PutioAPIClient } from '../client'\n\nexport default class IFTTT {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public SendEvent({\n    clientName,\n    eventType,\n    ingredients = {},\n  }: {\n    clientName?: string\n    eventType: string\n    ingredients: object\n  }) {\n    return this.client.post('/ifttt-client/event', {\n      data: {\n        client_name: clientName,\n        event_type: eventType,\n        ingredients,\n      },\n    })\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport {\n  IUserPaymentInfoResponse,\n  IVoucherInfoResponse,\n  INanoPaymentRequestResponse,\n  IPaymentOptionsResponse,\n} from './types'\n\nexport default class Payment {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Info() {\n    return this.client.get<IUserPaymentInfoResponse>('/payment/info')\n  }\n\n  public Plans() {\n    return this.client.get('/payment/plans')\n  }\n\n  public Options() {\n    return this.client.get<IPaymentOptionsResponse>('/payment/options')\n  }\n\n  public History({ unReportedOnly = false } = {}) {\n    return this.client.get('/payment/history', {\n      params: {\n        unreported_only: unReportedOnly,\n      },\n    })\n  }\n\n  public Invites() {\n    return this.client.get('/payment/invites')\n  }\n\n  public GetPlanChangeInfo({\n    planPath,\n    paymentType,\n    couponCode,\n  }: {\n    planPath: string\n    paymentType: string\n    couponCode?: string\n  }) {\n    return this.client.get(`/payment/change_plan/${planPath}`, {\n      params: {\n        coupon_code: couponCode,\n        payment_type: paymentType,\n      },\n    })\n  }\n\n  public GetPlanChangeUrls({\n    planPath,\n    paymentType,\n    couponCode,\n    confirmationCode,\n  }: {\n    planPath: string\n    paymentType: string\n    couponCode?: string\n    confirmationCode?: string\n  }) {\n    return this.client.post(`/payment/change_plan/${planPath}`, {\n      data: {\n        payment_type: paymentType,\n        confirmation_code: confirmationCode,\n      },\n      params: {\n        coupon_code: couponCode,\n      },\n    })\n  }\n\n  public ChangePlan(args: any) {\n    return this.GetPlanChangeUrls(args)\n  }\n\n  public CreateNanoPaymentRequest({ planCode }: { planCode: string }) {\n    return this.client.post<INanoPaymentRequestResponse>(\n      '/payment/methods/nano/request',\n      {\n        data: {\n          plan_code: planCode,\n        },\n      },\n    )\n  }\n\n  public CreateCoinbaseCharge(path: string) {\n    return this.client.post('/payment/methods/coinbase/charge', {\n      data: {\n        plan_fs_path: path,\n      },\n    })\n  }\n\n  public CreateCoinbaseCheckout(path: string) {\n    return this.client.post('/payment/methods/coinbase/checkout', {\n      data: {\n        plan_fs_path: path,\n      },\n    })\n  }\n\n  public CancelSubscription() {\n    return this.client.post('/payment/stop_subscription')\n  }\n\n  public GetVoucherInfo(code: string) {\n    return this.client.get<IVoucherInfoResponse>(\n      `/payment/redeem_voucher/${code}`,\n    )\n  }\n\n  public RedeemVoucher(code: string) {\n    return this.client.post(`/payment/redeem_voucher/${code}`)\n  }\n\n  public VerifyFastspringPayment(reference: string) {\n    return this.client.get(`/payment/fs-confirm/${reference}`)\n  }\n\n  public Report(paymentIds = []) {\n    return this.client.post('/payment/report', {\n      data: {\n        payment_ids: paymentIds.join(','),\n      },\n    })\n  }\n\n  public AddWaitingPayment(data: any) {\n    return this.client.post('/payment/paddle_waiting_payment', { data })\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport { RSSFeed, RSSFeedItem, RSSFeedParams } from './types'\n\nexport default class RSS {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Query() {\n    return this.client.get<{ feeds: RSSFeed[] }>('/rss/list')\n  }\n\n  public Get(id: RSSFeed['id']) {\n    return this.client.get<{ feed: RSSFeed }>(`/rss/${id}`)\n  }\n\n  public Create(rss: RSSFeedParams) {\n    return this.client.post<{ feed: RSSFeed }>('/rss/create', {\n      data: rss,\n    })\n  }\n\n  public Update(id: RSSFeed['id'], rss: RSSFeedParams) {\n    return this.client.post<{}>(`/rss/${id}`, {\n      data: rss,\n    })\n  }\n\n  public Pause(id: RSSFeed['id']) {\n    return this.client.post<{}>(`/rss/${id}/pause`)\n  }\n\n  public Resume(id: RSSFeed['id']) {\n    return this.client.post<{}>(`/rss/${id}/resume`)\n  }\n\n  public Delete(id: RSSFeed['id']) {\n    return this.client.post<{}>(`/rss/${id}/delete`)\n  }\n\n  public Logs(id: RSSFeed['id']) {\n    return this.client.get<{\n      feed: RSSFeed\n      items: RSSFeedItem[]\n    }>(`/rss/${id}/items`)\n  }\n\n  public ClearLogs(id: RSSFeed['id']) {\n    return this.client.post<{}>(`/rss/${id}/clear-log`)\n  }\n\n  public RetryItem(id: RSSFeed['id'], itemId: RSSFeedItem['id']) {\n    return this.client.post<{}>(`/rss/${id}/items/${itemId}/retry`)\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport {\n  ITransfersResponse,\n  Transfer,\n  NewTransferParams,\n  NewTransferError,\n} from './types'\n\nexport default class Tranfers {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Add(params: NewTransferParams) {\n    return this.client.post<{ transfer: Transfer }>('/transfers/add', {\n      data: params,\n    })\n  }\n\n  public AddMulti(params: NewTransferParams[]) {\n    return this.client.post<{\n      transfers: Transfer[]\n      errors: NewTransferError[]\n    }>('/transfers/add-multi', {\n      data: {\n        urls: JSON.stringify(params),\n      },\n    })\n  }\n\n  public Get(id: number) {\n    return this.client.get<{ transfer: Transfer }>(`/transfers/${id}`)\n  }\n\n  public Query({ perPage, total }: { perPage?: number; total?: boolean } = {}) {\n    return this.client.get<ITransfersResponse>('/transfers/list', {\n      params: {\n        per_page: perPage,\n        total,\n      },\n    })\n  }\n\n  public Continue(cursor: string, { perPage }: { perPage?: number } = {}) {\n    return this.client.post<ITransfersResponse>('/transfers/list/continue', {\n      data: {\n        cursor,\n        per_page: perPage,\n      },\n    })\n  }\n\n  public ClearAll() {\n    return this.client.post<{}>('/transfers/clean')\n  }\n\n  public Cancel(ids: number[] = []) {\n    return this.client.post<{}>('/transfers/cancel', {\n      data: {\n        transfer_ids: ids.join(','),\n      },\n    })\n  }\n\n  public Retry(id: number) {\n    return this.client.post('/transfers/retry', {\n      data: { id },\n    })\n  }\n\n  public Reannounce(id: number) {\n    return this.client.post('/transfers/reannounce', {\n      data: { id },\n    })\n  }\n\n  public Count() {\n    return this.client.get<{ count: number }>('/transfers/count')\n  }\n}\n","import { PutioAPIClient } from '../client'\n\nexport default class Trash {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public List({ limit = 50 } = {}) {\n    return this.client.get('/trash/list', {\n      params: {\n        per_page: limit,\n      },\n    })\n  }\n\n  public Continue(cursor: string, { limit = 50 } = {}) {\n    return this.client.post('/trash/list/continue', {\n      data: {\n        cursor,\n        per_page: limit,\n      },\n    })\n  }\n\n  public Restore({\n    useCursor = false,\n    ids = [],\n    cursor,\n  }: {\n    useCursor?: boolean\n    ids?: number[]\n    cursor?: string\n  }) {\n    return this.client.post('/trash/restore', {\n      data: {\n        cursor: useCursor ? cursor : undefined,\n        file_ids: !useCursor ? ids.join(',') : undefined,\n      },\n    })\n  }\n\n  public Delete({\n    useCursor = false,\n    ids = [],\n    cursor,\n  }: {\n    useCursor?: boolean\n    ids?: number[]\n    cursor?: string\n  }) {\n    return this.client.post('/trash/delete', {\n      data: {\n        cursor: useCursor ? cursor : undefined,\n        file_ids: !useCursor ? ids.join(',') : undefined,\n      },\n    })\n  }\n\n  public Empty() {\n    return this.client.post('/trash/empty')\n  }\n}\n","import { PutioAPIClient } from '../client'\n\nexport default class Tunnel {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Routes() {\n    return this.client.get('/tunnel/routes')\n  }\n}\n","import { PutioAPIClient } from '../../client'\nimport {\n  IUserInfoResponse,\n  IUserSettingsResponse,\n  IUserConfirmationsResponse,\n  ConfirmationSubject,\n  ClearDataOptions,\n} from './types'\n\nexport default class User {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  /**\n   * @deprecated Use `Account.Info` method instead.\n   */\n  public Info(params: Record<string, string | number>) {\n    return this.client.get<IUserInfoResponse>('/account/info', {\n      params,\n    })\n  }\n\n  /**\n   * @deprecated Use `Account.Settings` method instead.\n   */\n  public Settings() {\n    return this.client.get<IUserSettingsResponse>('/account/settings')\n  }\n\n  /**\n   * @deprecated Use `Account.SaveSettings` method instead.\n   */\n  public SaveSettings(settings: Record<string, any>) {\n    return this.client.post('/account/settings', {\n      data: settings,\n    })\n  }\n\n  /**\n   * @deprecated Use `Config.Read` method instead.\n   */\n  public Config() {\n    return this.client.get<Record<string, unknown>>('/config')\n  }\n\n  /**\n   * @deprecated Use `Config.Write` method instead.\n   */\n  public SaveConfig(config: Record<string, unknown>) {\n    return this.client.put('/config', {\n      data: { config },\n    })\n  }\n\n  /**\n   * @deprecated Use `Account.Clear` method instead.\n   */\n  public ClearData(options: ClearDataOptions) {\n    return this.client.post<{}>('/account/clear', {\n      data: options,\n    })\n  }\n\n  /**\n   * @deprecated Use `Account.Destroy` method instead.\n   */\n  public Destroy(currentPassword: string) {\n    return this.client.post<{}>('/account/destroy', {\n      data: {\n        current_password: currentPassword,\n      },\n    })\n  }\n\n  /**\n   * @deprecated Use `Account.Confirmations` method instead.\n   */\n  public Confirmations(type?: ConfirmationSubject) {\n    return this.client.get<IUserConfirmationsResponse>(\n      '/account/confirmation/list',\n      {\n        data: {\n          type,\n        },\n      },\n    )\n  }\n}\n","import { PutioAPIClient } from '../client'\n\nexport default class Zips {\n  private client: PutioAPIClient\n\n  constructor(client: PutioAPIClient) {\n    this.client = client\n  }\n\n  public Query() {\n    return this.client.get('/zips/list')\n  }\n\n  public Create({\n    cursor,\n    excludeIds = [],\n    ids = [],\n  }: {\n    cursor?: string\n    excludeIds?: number[]\n    ids: number[]\n  }) {\n    return this.client.post('/zips/create', {\n      data: {\n        cursor,\n        exclude_ids: excludeIds.join(','),\n        file_ids: ids.join(','),\n      },\n    })\n  }\n\n  public Get(id: number) {\n    return this.client.get(`/zips/${id}`)\n  }\n\n  public Retry(id: number) {\n    return this.client.get(`/zips/${id}/retry`)\n  }\n\n  public Cancel(id: number) {\n    return this.client.get(`/zips/${id}/cancel`)\n  }\n}\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport qs from 'qs'\n\nimport {\n  PutioAPIClientResponseInterceptorFactory,\n  IPutioAPIClientOptions,\n  IPutioAPIClientResponse,\n} from './types'\n\nimport { DEFAULT_CLIENT_OPTIONS } from '../constants'\n\nimport { createClientIPChangeEmitter } from '../interceptors/response/clientIPChangeEmitter'\nimport { createErrorEmitter } from '../interceptors/response/errorEmitter'\nimport { createResponseFormatter } from '../interceptors/response/responseFormatter'\n\nimport {\n  eventEmitter,\n  EVENTS,\n  PutioAPIClientEventTypes,\n  EventListener,\n} from '../eventEmitter'\n\nimport Account from '../resources/Account/Account'\nimport Auth from '../resources/Auth/Auth'\nimport OAuth from '../resources/Auth/OAuth'\nimport DownloadLinks from '../resources/DownloadLinks/DownloadLinks'\nimport Sharing from '../resources/Sharing/Sharing'\nimport Config from '../resources/Config'\nimport Events from '../resources/Events/Events'\nimport Family from '../resources/Family'\nimport File from '../resources/Files/File'\nimport Files from '../resources/Files/Files'\nimport FriendInvites from '../resources/FriendInvites/FriendInvites'\nimport Friends from '../resources/Friends/Friends'\nimport IFTTT from '../resources/IFTTT'\nimport Payment from '../resources/Payment/Payment'\nimport RSS from '../resources/RSS/RSS'\nimport Transfers from '../resources/Transfers/Transfers'\nimport Trash from '../resources/Trash'\nimport Tunnel from '../resources/Tunnel'\nimport User from '../resources/User/User'\nimport Zips from '../resources/Zips'\n\nexport class PutioAPIClient {\n  public static EVENTS = EVENTS\n  public static DEFAULT_OPTIONS = DEFAULT_CLIENT_OPTIONS\n\n  public options: IPutioAPIClientOptions\n  public token: string | undefined\n  public http: AxiosInstance\n\n  public Account: Account\n  public Auth: Auth\n  public DownloadLinks: DownloadLinks\n  public Sharing: Sharing\n  public Config: Config\n  public Events: Events\n  public Family: Family\n  public Files: Files\n  public File: File\n  public Friends: Friends\n  public FriendInvites: FriendInvites\n  public IFTTT: IFTTT\n  public OAuth: OAuth\n  public Payment: Payment\n  public RSS: RSS\n  public Transfers: Transfers\n  public Trash: Trash\n  public Tunnel: Tunnel\n  public User: User\n  public Zips: Zips\n\n  constructor(options: IPutioAPIClientOptions) {\n    this.options = { ...PutioAPIClient.DEFAULT_OPTIONS, ...options }\n    this.http = this.createHTTPClient()\n\n    this.Account = new Account(this)\n    this.Auth = new Auth(this)\n    this.DownloadLinks = new DownloadLinks(this)\n    this.Sharing = new Sharing(this)\n    this.Config = new Config(this)\n    this.Events = new Events(this)\n    this.Files = new Files(this)\n    this.File = new File(this)\n    this.Friends = new Friends(this)\n    this.FriendInvites = new FriendInvites(this)\n    this.Family = new Family(this)\n    this.OAuth = new OAuth(this)\n    this.Payment = new Payment(this)\n    this.RSS = new RSS(this)\n    this.Transfers = new Transfers(this)\n    this.Trash = new Trash(this)\n    this.Tunnel = new Tunnel(this)\n    this.User = new User(this)\n    this.Zips = new Zips(this)\n    this.IFTTT = new IFTTT(this)\n  }\n\n  public once(event: PutioAPIClientEventTypes, listener: EventListener) {\n    eventEmitter.once(event, listener)\n  }\n\n  public on(event: PutioAPIClientEventTypes, listener: EventListener) {\n    eventEmitter.on(event, listener)\n  }\n\n  public off(event: PutioAPIClientEventTypes, listener: EventListener) {\n    eventEmitter.off(event, listener)\n  }\n\n  public configure(options: IPutioAPIClientOptions) {\n    this.options = { ...this.options, ...options }\n    return this\n  }\n\n  public setToken(token: string): PutioAPIClient {\n    this.token = token\n    this.http.defaults.headers.common.Authorization = `token ${token}`\n    return this\n  }\n\n  public clearToken(): PutioAPIClient {\n    this.token = undefined\n    this.http.defaults.headers.common.Authorization = ``\n    return this\n  }\n\n  public get<T = any>(\n    url: string,\n    config?: AxiosRequestConfig,\n  ): Promise<IPutioAPIClientResponse<T>> {\n    return this.http({\n      method: 'GET',\n      url,\n      ...config,\n    })\n  }\n\n  public post<T = any>(\n    url: string,\n    config?: AxiosRequestConfig,\n  ): Promise<IPutioAPIClientResponse<T>> {\n    return this.http({\n      method: 'POST',\n      url,\n      ...config,\n    })\n  }\n\n  public put<T = any>(\n    url: string,\n    config?: AxiosRequestConfig,\n  ): Promise<IPutioAPIClientResponse<T>> {\n    return this.http({\n      method: 'PUT',\n      url,\n      ...config,\n    })\n  }\n\n  public delete<T = any>(\n    url: string,\n    config?: AxiosRequestConfig,\n  ): Promise<IPutioAPIClientResponse<T>> {\n    return this.http({\n      method: 'DELETE',\n      url,\n      ...config,\n    })\n  }\n\n  private createHTTPClient() {\n    const axiosInstance = axios.create({\n      baseURL: this.options.baseURL,\n      withCredentials: true,\n      timeout: 30000,\n      paramsSerializer: params =>\n        qs.stringify(params, { arrayFormat: 'comma' }),\n    })\n\n    // apply response interceptors\n    const responseInterceptorFactories: PutioAPIClientResponseInterceptorFactory[] = [\n      createResponseFormatter,\n      createClientIPChangeEmitter,\n      createErrorEmitter,\n    ]\n\n    responseInterceptorFactories\n      .map(createResponseInterceptor => createResponseInterceptor(this.options))\n      .forEach(({ onFulfilled, onRejected }) => {\n        axiosInstance.interceptors.response.use(onFulfilled, onRejected)\n      })\n\n    return axiosInstance\n  }\n}\n"],"names":["mockRequestConfig","mockPutioAPIClientResponse","config","data","foo","status","headers","statusText","mockAxiosError","isAxiosError","name","message","toJSON","mockPutioAPIClientError","error_type","error_message","status_code","extra","createMockResponse","createMockErrorResponse","createMockXMLHttpRequest","readyState","responseText","xhr","XMLHttpRequest","Proxy","get","target","prop","DEFAULT_CLIENT_OPTIONS","baseURL","clientID","webAppURL","ACCOUNT_CLEAR_OPTION_KEYS","FileSortOptions","NAME_ASC","NAME_DESC","SIZE_ASC","SIZE_DESC","DATE_ASC","DATE_DESC","MODIFIED_ASC","MODIFIED_DESC","identity","arg","isPutioAPIErrorResponse","input","isPutioAPIError","createFormDataFromObject","obj","Object","keys","reduce","key","append","FormData","EVENTS","ERROR","CLIENT_IP_CHANGED","eventEmitter","EventEmitter","IP_HEADER_KEY","createClientIPChangeEmitter","IP","checkIP","response","newIP","emit","onFulfilled","onRejected","error","Promise","reject","createErrorEmitter","createResponseFormatter","body","axios","errorData","code","request","JSON","parse","formattedError","e","Account","client","Info","params","Settings","SaveSettings","payload","post","Clear","options","Destroy","currentPassword","current_password","Confirmations","type","TwoFactor","GenerateTOTP","VerifyTOTP","twoFactorScopedToken","oauth_token","GetRecoveryCodes","RegenerateRecoveryCodes","Auth","GetLoginURL","redirectURI","responseType","state","clientName","url","URI","addQuery","client_id","client_name","redirect_uri","response_type","isolated","toString","Login","username","password","app","put","client_secret","Authorization","Base64","encode","Logout","Register","Exists","value","GetVoucher","GetGiftCard","GetFamilyInvite","ForgotPassword","mail","ResetPassword","newPassword","GetCode","app_id","CheckCodeMatch","LinkDevice","Grants","RevokeApp","id","Clients","RevokeClient","RevokeAllClients","ValidateToken","token","OAuth","GetAuthorizeURL","query","uri","Query","Get","GetIconURL","SetIcon","Create","Update","Delete","RegenerateToken","GetPopularApps","DownloadLinks","ids","cursor","excludeIds","file_ids","join","exclude_ids","downloadLinksId","Sharing","Clone","parentId","parent_id","CloneInfo","cloneInfoId","Config","Read","Write","GetKey","SetKey","DeleteKey","PutioEvents","Family","GetInvites","CreateInvite","DeleteMember","Join","invitationCode","File","Public","oauthToken","mp4StatusParent","videoMetadataParent","codecsParent","mediaInfoParent","codecs_parent","media_info_parent","mp4_status_parent","mp4_stream_url_parent","stream_url_parent","video_metadata_parent","Download","fileId","GetStorageURL","GetContent","Subtitles","languages","GetHLSStreamURL","subtitleLanguages","maxSubtitleCount","playOriginal","subtitle_languages","max_subtitle_count","original","undefined","ConvertToMp4","ConvertStatus","DeleteMp4","SharedWith","Unshare","shareId","shares","Array","isArray","map","i","SaveAsMp4","Rename","file_id","GetStartFrom","SetStartFrom","time","parseInt","ResetStartFrom","Extract","user_file_ids","CreatePublicLink","RevokePublicLink","FindNextFile","fileType","file_type","FindNextVideo","Files","perPage","sortBy","contentType","streamUrl","streamUrlParent","mp4StreamUrl","mp4StreamUrlParent","hidden","mp4Status","videoMetadata","breadcrumbs","total","per_page","sort_by","content_type","stream_url","mp4_stream_url","mp4_status","video_metadata","Continue","Search","ContinueSearch","NewFolder","CreateFolder","path","DeleteAll","partialDelete","skipTrash","skip_nonexistents","partial_delete","skip_trash","ignoreFileOwner","skip_owner_check","ExtractStatus","Share","friends","Move","to","MoveAll","SharedOnes","PublicShares","SetWatchStatus","watched","Upload","file","fileName","form","FriendInvites","GetAll","Friends","WaitingRequests","WaitingRequestsCount","SendFrienshipRequest","Remove","Approve","Deny","SharedFolder","IFTTT","SendEvent","eventType","ingredients","event_type","Payment","Plans","Options","History","unReportedOnly","unreported_only","Invites","GetPlanChangeInfo","planPath","paymentType","couponCode","coupon_code","payment_type","GetPlanChangeUrls","confirmationCode","confirmation_code","ChangePlan","args","CreateNanoPaymentRequest","planCode","plan_code","CreateCoinbaseCharge","plan_fs_path","CreateCoinbaseCheckout","CancelSubscription","GetVoucherInfo","RedeemVoucher","VerifyFastspringPayment","reference","Report","paymentIds","payment_ids","AddWaitingPayment","RSS","rss","Pause","Resume","Logs","ClearLogs","RetryItem","itemId","Tranfers","Add","AddMulti","urls","stringify","ClearAll","Cancel","transfer_ids","Retry","Reannounce","Count","Trash","List","limit","Restore","useCursor","Empty","Tunnel","Routes","User","settings","SaveConfig","ClearData","Zips","PutioAPIClient","DEFAULT_OPTIONS","http","createHTTPClient","Events","Transfers","once","event","listener","on","off","configure","setToken","defaults","common","clearToken","method","axiosInstance","create","withCredentials","timeout","paramsSerializer","qs","arrayFormat","responseInterceptorFactories","createResponseInterceptor","forEach","interceptors","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,iBAAiB,GAAuB,EAA9C;IAEaC,0BAA0B,GAElC;AACHC,EAAAA,MAAM,EAAEF,iBADL;AAEHG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAE,KAAP;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAFH;AAGHC,EAAAA,OAAO,EAAE;AACP,kBAAc;AADP,GAHN;AAMHD,EAAAA,MAAM,EAAE,GANL;AAOHE,EAAAA,UAAU,EAAE;AAPT;IAUQC,cAAc,GAAe;AACxCN,EAAAA,MAAM,EAAEF,iBADgC;AAExCS,EAAAA,YAAY,EAAE,IAF0B;AAGxCC,EAAAA,IAAI,EAAE,aAHkC;AAIxCC,EAAAA,OAAO,EAAE,qBAJ+B;AAKxCC,EAAAA,MALwC;AAMtC,WAAO;AACLF,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELC,MAAAA,OAAO,EAAE,KAAKA;AAFT,KAAP;AAID;AAVuC;IAa7BE,uBAAuB,6BAC/BL,cAD+B;AAElCL,EAAAA,IAAI,EAAE;AACJW,IAAAA,UAAU,EAAE,YADR;AAEJC,IAAAA,aAAa,EAAE,cAFX;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,KAAK,EAAE;AAAEb,MAAAA,GAAG,EAAE;AAAP;AAJH,GAF4B;AAQlCQ,EAAAA,MARkC;AAShC,WAAO,KAAKT,IAAZ;AACD;AAViC;IAavBe,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCf,IADgC,EAEhCE,MAFgC;AAAA,MAEhCA,MAFgC;AAEhCA,IAAAA,MAFgC,GAEf,GAFe;AAAA;;AAAA,SAGA;AAChCH,IAAAA,MAAM,EAAEF,iBADwB;AAEhCG,IAAAA,IAAI,eAAOA,IAAP;AAAaE,MAAAA,MAAM,EAAE;AAArB,MAF4B;AAGhCA,IAAAA,MAAM,EAANA,MAHgC;AAIhCC,IAAAA,OAAO,EAAE,EAJuB;AAKhCC,IAAAA,UAAU,EAAE;AALoB,GAHA;AAAA;IAWrBY,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrChB,IADqC;AAAA,sBAGlCK,cAHkC;AAIrCL,IAAAA,IAAI,EAAJA,IAJqC;AAKrCS,IAAAA,MALqC;AAMnC,aAAO,KAAKT,IAAZ;AACD;AAPoC;AAAA;SAUvBiB,yBACdC,YACAhB,QACAiB;AAEA,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,SAAO,IAAIC,KAAJ,CAAUF,GAAV,EAAe;AACpBG,IAAAA,GADoB,eAChBC,MADgB,EACRC,IADQ;AAElB,UAAIA,IAAI,KAAK,YAAb,EAA2B,OAAOP,UAAP;AAC3B,UAAIO,IAAI,KAAK,QAAb,EAAuB,OAAOvB,MAAP;AACvB,UAAIuB,IAAI,KAAK,cAAb,EAA6B,OAAON,YAAP;;AAE7B,aAAOK,MAAM,CAACC,IAAD,CAAb;AACD;AAPmB,GAAf,CAAP;AASD;;ICjFYC,sBAAsB,GAA2B;AAC5DC,EAAAA,OAAO,EAAE,uBADmD;AAE5DC,EAAAA,QAAQ,EAAE,CAFkD;AAG5DC,EAAAA,SAAS,EAAE;AAHiD,CAAvD;;ICmFMC,yBAAyB,GAAG,CACvC,OADuC,EAEvC,oBAFuC,EAGvC,kBAHuC,EAIvC,WAJuC,EAKvC,UALuC,EAMvC,SANuC,EAOvC,OAPuC,EAQvC,SARuC,CAAlC;;IC1EMC,eAAe,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,UADmB;AAE7BC,EAAAA,SAAS,EAAE,WAFkB;AAG7BC,EAAAA,QAAQ,EAAE,UAHmB;AAI7BC,EAAAA,SAAS,EAAE,WAJkB;AAK7BC,EAAAA,QAAQ,EAAE,UALmB;AAM7BC,EAAAA,SAAS,EAAE,WANkB;AAO7BC,EAAAA,YAAY,EAAE,cAPe;AAQ7BC,EAAAA,aAAa,EAAE;AARc,CAAxB;;ACTA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAIC,GAAJ;AAAA,SAAeA,GAAf;AAAA,CAAjB;AAEP,IAAaC,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrCC,KADqC;AAAA,SAGrC,OAAOA,KAAP,KAAiB,QAAjB,IACA,CAAC,CAACA,KADF,IAEA,CAAC,CAAEA,KAAiC,CAAChC,UALA;AAAA,CAAhC;AAOP,IAAaiC,eAAe,GAAG,SAAlBA,eAAkB,CAC7BD,KAD6B;AAAA,SAG7B,OAAOA,KAAP,KAAiB,QAAjB,IACA,CAAC,CAACA,KADF,IAEA,CAAC,CAAEA,KAAiC,CAAC3C,IAFrC,IAGA0C,uBAAuB,CAAEC,KAAiC,CAAC3C,IAApC,CANM;AAAA,CAAxB;AAQP,AAAO,IAAM6C,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,GAAD;AACtC,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAAwB,UAACjD,IAAD,EAAOkD,GAAP;AAC7BlD,IAAAA,IAAI,CAACmD,MAAL,CAAYD,GAAZ,EAAiBJ,GAAG,CAACI,GAAD,CAApB;AACA,WAAOlD,IAAP;AACD,GAHM,EAGJ,IAAIoD,QAAJ,EAHI,CAAP;AAID,CALM;;ACfA,IAAMC,MAAM,GAAG;AACpBC,EAAAA,KAAK,EAAE,OADa;AAEpBC,EAAAA,iBAAiB,EAAE;AAFC,CAAf;AAOP,AAAO,IAAMC,YAAY,gBAAGC,YAAY,EAAjC;;ACPP,IAAMC,aAAa,GAAG,iBAAtB;AAEA,AAAO,IAAMC,2BAA2B,GAA6C,SAAxEA,2BAAwE;AACnF,MAAIC,EAAE,GAAW,EAAjB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;AACd,QAAMC,KAAK,GAAGD,QAAQ,CAAC3D,OAAT,CAAiBuD,aAAjB,CAAd;;AAEA,QAAI,CAACE,EAAL,EAAS;AACPA,MAAAA,EAAE,GAAGG,KAAL;AACA;AACD;;AAED,QAAIA,KAAK,IAAIH,EAAE,KAAKG,KAApB,EAA2B;AACzBP,MAAAA,YAAY,CAACQ,IAAb,CAAkBX,MAAM,CAACE,iBAAzB,EAA4C;AAAEK,QAAAA,EAAE,EAAFA,EAAF;AAAMG,QAAAA,KAAK,EAALA;AAAN,OAA5C;AACAH,MAAAA,EAAE,GAAGG,KAAL;AACA;AACD;AACF,GAbD;;AAeA,SAAO;AACLE,IAAAA,WAAW,EAAE,qBAAAH,QAAQ;AACnBD,MAAAA,OAAO,CAACC,QAAD,CAAP;AACA,aAAOA,QAAP;AACD,KAJI;AAMLI,IAAAA,UAAU,EAAE,oBAAAC,KAAK;AACf,UAAIA,KAAK,CAACL,QAAV,EAAoB;AAClBD,QAAAA,OAAO,CAACM,KAAK,CAACL,QAAP,CAAP;AACD;;AAED,aAAOM,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AAZI,GAAP;AAcD,CAhCM;;ACFA,IAAMG,kBAAkB,GAA6C,SAA/DA,kBAA+D;AAAA,SAAO;AACjFL,IAAAA,WAAW,EAAEzB,QADoE;AAGjF0B,IAAAA,UAAU,EAAE,oBAAAC,KAAK;AACfX,MAAAA,YAAY,CAACQ,IAAb,CAAkBX,MAAM,CAACC,KAAzB,EAAgCa,KAAhC;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AANgF,GAAP;AAAA,CAArE;;ACIA,IAAMI,uBAAuB,GAA6C,SAApEA,uBAAoE;AAAA,SAAO;AACtFN,IAAAA,WAAW,EAAE,qBAAAH,QAAQ;AAAA,0BAChBA,QADgB;AAEnBU,QAAAA,IAAI,EAAEV,QAAQ,CAAC9D;AAFI;AAAA,KADiE;AAMtFkE,IAAAA,UAAU,EAAE,oBAACC,KAAD;AACV,UAAI,CAACM,KAAK,CAACnE,YAAN,CAAmB6D,KAAnB,CAAL,EAAgC;AAC9B,eAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;;AAED,UAAI;AAAA;;AACF,YAAIO,SAAS,GAA6B;AACxC,2CAAcP,KAAK,CAACL,QAApB,qBAAc,gBAAgB3D,OAAhB,CAAwB,YAAxB,CAD0B;AAExCS,UAAAA,aAAa,EAAEuD,KAAK,CAAC3D,OAFmB;AAGxCG,UAAAA,UAAU,EAAE,OAH4B;AAIxCE,UAAAA,WAAW,EAAE,CAJ2B;AAKxCC,UAAAA,KAAK,EAAE;AALiC,SAA1C,CADE;;AAUF,YAAIqD,KAAK,CAACQ,IAAN,KAAe,cAAnB,EAAmC;AACjCD,UAAAA,SAAS,gBACJA,SADI;AAEP7D,YAAAA,WAAW,EAAE,GAFN;AAGPD,YAAAA,aAAa,EAAE;AAHR,YAAT;AAKD;;AAED,YAAIuD,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACL,QAAN,CAAe9D,IAArC,EAA2C;AAAA,iCAChBmE,KAAK,CAACL,QADU;AAAA,cACjC5D,MADiC,oBACjCA,MADiC;AAAA,cACzBF,IADyB,oBACzBA,IADyB;AAEzC0E,UAAAA,SAAS,GAAGhC,uBAAuB,CAAC1C,IAAD,CAAvB,gBAEH0E,SAFG,EAGH1E,IAHG;AAINa,YAAAA,WAAW,EAAEX;AAJP,4BAOHwE,SAPG;AAQN7D,YAAAA,WAAW,EAAEX;AARP,YAAZ;AAUD,SAZD,MAYO,IACLiE,KAAK,CAACS,OAAN,YAAyBvD,cAAzB,IACA8C,KAAK,CAACS,OAAN,CAAc1D,UAAd,KAA6B,CAFxB,EAGL;AAAA,+BACiCiD,KAAK,CAACS,OADvC;AAAA,cACQ1E,OADR,kBACQA,MADR;AAAA,cACgBiB,YADhB,kBACgBA,YADhB;;AAEA,cAAMnB,KAAI,GAAG6E,IAAI,CAACC,KAAL,CAAW3D,YAAX,CAAb;;AAEAuD,UAAAA,SAAS,gBACJA,SADI,EAEJ1E,KAFI;AAGPa,YAAAA,WAAW,EAAEX;AAHN,YAAT;AAKD;;AAED,YAAM6E,cAAc,gBACfZ,KADe;AAElBnE,UAAAA,IAAI,EAAE0E,SAFY;AAGlBjE,UAAAA,MAAM,EAAE;AAAA,mBAAMiE,SAAN;AAAA;AAHU,UAApB;;AAMA,eAAON,OAAO,CAACC,MAAR,CAAeU,cAAf,CAAP;AACD,OAnDD,CAmDE,OAAOC,CAAP,EAAU;AACV,eAAOZ,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AACF;AAjEqF,GAAP;AAAA,CAA1E;;ICEcc;AAGnB,mBAAYC,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMC,OAAA,cAAKC,MAAL;QAAKA;AAAAA,MAAAA,SAA4B;;;AACtC,WAAO,KAAKF,MAAL,CAAY3D,GAAZ,CAAwC,eAAxC,EAAyD;AAC9D6D,MAAAA,MAAM,EAANA;AAD8D,KAAzD,CAAP;AAGD;;SAEMC,WAAA;AACL,WAAO,KAAKH,MAAL,CAAY3D,GAAZ,CAAgD,mBAAhD,CAAP;AACD;;SAEM+D,eAAA,sBAAaC,OAAb;AACL,WAAO,KAAKL,MAAL,CAAYM,IAAZ,CAAiB,mBAAjB,EAAsC;AAC3CxF,MAAAA,IAAI,EAAEuF;AADqC,KAAtC,CAAP;AAGD;;SAEME,QAAA,eAAMC,OAAN;AACL,WAAO,KAAKR,MAAL,CAAYM,IAAZ,CAAqB,gBAArB,EAAuC;AAC5CxF,MAAAA,IAAI,EAAE0F;AADsC,KAAvC,CAAP;AAGD;;SAEMC,UAAA,iBAAQC,eAAR;AACL,WAAO,KAAKV,MAAL,CAAYM,IAAZ,CAAqB,kBAArB,EAAyC;AAC9CxF,MAAAA,IAAI,EAAE;AACJ6F,QAAAA,gBAAgB,EAAED;AADd;AADwC,KAAzC,CAAP;AAKD;;SAEME,gBAAA,uBAAcC,IAAd;AACL,WAAO,KAAKb,MAAL,CAAY3D,GAAZ,CACL,4BADK,EAEL;AACEvB,MAAAA,IAAI,EAAE;AACJ+F,QAAAA,IAAI,EAAJA;AADI;AADR,KAFK,CAAP;AAQD;;;;;IC3CGC;AAGJ,qBAAYd,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMe,eAAA;AACL,WAAO,KAAKf,MAAL,CAAYM,IAAZ,CAAwC,2BAAxC,CAAP;AACD;;SAEMU,aAAA,oBAAWC,oBAAX,EAAyCxB,IAAzC;AACL,WAAO,KAAKO,MAAL,CAAYM,IAAZ,CAAsC,yBAAtC,EAAiE;AACtEJ,MAAAA,MAAM,EAAE;AAAEgB,QAAAA,WAAW,EAAED;AAAf,OAD8D;AAEtEnG,MAAAA,IAAI,EAAE;AAAE2E,QAAAA,IAAI,EAAJA;AAAF;AAFgE,KAAjE,CAAP;AAID;;SAEM0B,mBAAA;AACL,WAAO,KAAKnB,MAAL,CAAY3D,GAAZ,CACL,4BADK,CAAP;AAGD;;SAEM+E,0BAAA;AACL,WAAO,KAAKpB,MAAL,CAAYM,IAAZ,CACL,oCADK,CAAP;AAGD;;;;;IAGkBe;AAKnB,gBAAYrB,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKc,SAAL,GAAiB,IAAIA,SAAJ,CAAcd,MAAd,CAAjB;AACD;;;;UAEMsB,cAAA;QACLC,mBAAAA;iCACAC;QAAAA,8CAAe;QACfC,aAAAA;QACA/E,gBAAAA;QACAgF,kBAAAA;QAQQlB,UAAY,KAAKR,OAAjBQ;AAER,QAAMmB,GAAG,GAAG,IAAIC,GAAJ,CAAWpB,OAAO,CAAC7D,SAAnB,oBAA6CkF,QAA7C,CAAsD;AAChEC,MAAAA,SAAS,EAAEpF,QAAQ,IAAI8D,OAAO,CAAC9D,QADiC;AAEhEqF,MAAAA,WAAW,EAAEL,UAFmD;AAGhEM,MAAAA,YAAY,EAAET,WAHkD;AAIhEU,MAAAA,aAAa,EAAET,YAJiD;AAKhEU,MAAAA,QAAQ,EAAE,CALsD;AAMhET,MAAAA,KAAK,EAALA;AANgE,KAAtD,CAAZ;AASA,WAAOE,GAAG,CAACQ,QAAJ,EAAP;AACD;;UAEMC,QAAA;QACLC,iBAAAA;QACAC,iBAAAA;QACAC,YAAAA;AASA,WAAO,KAAKvC,MAAL,CAAYwC,GAAZ,qCAC6BD,GAAG,CAACT,SADjC,uBAC4DS,GAAG,CAACE,aADhE,EAEL;AACExH,MAAAA,OAAO,EAAE;AACPyH,QAAAA,aAAa,aAAWC,eAAM,CAACC,MAAP,CAAiBP,QAAjB,SAA6BC,QAA7B;AADjB;AADX,KAFK,CAAP;AAQD;;UAEMO,SAAA;AACL,WAAO,KAAK7C,MAAL,CAAYM,IAAZ,CAAiB,sBAAjB,CAAP;AACD;;UAEMwC,WAAA,kBAAShI,IAAT;AACL,WAAO,KAAKkF,MAAL,CAAYM,IAAZ,CAAiB,wBAAjB,EAA2C;AAChDxF,MAAAA,IAAI;AACFgH,QAAAA,SAAS,EAAE,KAAK9B,MAAL,CAAYQ,OAAZ,CAAoB9D;AAD7B,SAEC5B,IAFD;AAD4C,KAA3C,CAAP;AAMD;;UAEMiI,SAAA,gBAAO/E,GAAP,EAAoBgF,KAApB;AACL,WAAO,KAAKhD,MAAL,CAAY3D,GAAZ,2BAAwC2B,GAAxC,EAA+C;AACpDkC,MAAAA,MAAM,EAAE;AAAE8C,QAAAA,KAAK,EAALA;AAAF;AAD4C,KAA/C,CAAP;AAGD;;UAEMC,aAAA,oBAAWxD,IAAX;AACL,WAAO,KAAKO,MAAL,CAAY3D,GAAZ,4BAAyCoD,IAAzC,CAAP;AACD;;UAEMyD,cAAA,qBAAYzD,IAAZ;AACL,WAAO,KAAKO,MAAL,CAAY3D,GAAZ,8BAA2CoD,IAA3C,CAAP;AACD;;UAEM0D,kBAAA,yBAAgB1D,IAAhB;AACL,WAAO,KAAKO,MAAL,CAAY3D,GAAZ,2BAAwCoD,IAAxC,CAAP;AACD;;UAEM2D,iBAAA,wBAAeC,IAAf;AACL,WAAO,KAAKrD,MAAL,CAAYM,IAAZ,CAAiB,+BAAjB,EAAkD;AACvDxF,MAAAA,IAAI,EAAE;AAAEuI,QAAAA,IAAI,EAAJA;AAAF;AADiD,KAAlD,CAAP;AAGD;;UAEMC,gBAAA,uBAActF,GAAd,EAA2BuF,WAA3B;AACL,WAAO,KAAKvD,MAAL,CAAYM,IAAZ,CAAiB,8BAAjB,EAAiD;AACtDxF,MAAAA,IAAI,EAAE;AACJkD,QAAAA,GAAG,EAAHA,GADI;AAEJsE,QAAAA,QAAQ,EAAEiB;AAFN;AADgD,KAAjD,CAAP;AAMD;;UAEMC,UAAA,iBAAQ9G,QAAR,EAAmCgF,UAAnC;AACL,WAAO,KAAK1B,MAAL,CAAY3D,GAAZ,CACL,kBADK,EAEL;AACE6D,MAAAA,MAAM,EAAE;AAAEuD,QAAAA,MAAM,EAAE/G,QAAV;AAAoBqF,QAAAA,WAAW,EAAEL;AAAjC;AADV,KAFK,CAAP;AAMD;;UAEMgC,iBAAA,wBAAejE,IAAf;AACL,WAAO,KAAKO,MAAL,CAAY3D,GAAZ,uBACeoD,IADf,CAAP;AAGD;;UAEMkE,aAAA,oBAAWlE,IAAX;AACL,WAAO,KAAKO,MAAL,CAAYM,IAAZ,CAAoC,kBAApC,EAAwD;AAC7DxF,MAAAA,IAAI,EAAE;AAAE2E,QAAAA,IAAI,EAAJA;AAAF;AADuD,KAAxD,CAAP;AAGD;;UAEMmE,SAAA;AACL,WAAO,KAAK5D,MAAL,CAAY3D,GAAZ,CAAsC,gBAAtC,CAAP;AACD;;UAEMwH,YAAA,mBAAUC,EAAV;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,oBAAsCwD,EAAtC,aAAP;AACD;;UAEMC,UAAA;AACL,WAAO,KAAK/D,MAAL,CAAY3D,GAAZ,CAAgD,iBAAhD,CAAP;AACD;;UAEM2H,eAAA,sBAAaF,EAAb;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,qBAAuCwD,EAAvC,aAAP;AACD;;UAEMG,mBAAA;AACL,WAAO,KAAKjE,MAAL,CAAYM,IAAZ,CAAqB,2BAArB,CAAP;AACD;;UAEM4D,gBAAA,uBAAcC,KAAd;AACL,WAAO,KAAKnE,MAAL,CAAY3D,GAAZ,CAAwC,kBAAxC,EAA4D;AACjE6D,MAAAA,MAAM,EAAE;AAAEgB,QAAAA,WAAW,EAAEiD;AAAf;AADyD,KAA5D,CAAP;AAGD;;;;;IC7LkBC;AAGnB,iBAAYpE,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMqE,kBAAA,yBAAgBC,KAAhB;QAAgBA;AAAAA,MAAAA,QAAgB;;;uBAIjC,KAAKtE;QAFPmE,qBAAAA;QACW1H,uBAAX+D,QAAW/D;AAGb,QAAM8H,GAAG,GAAG,IAAI3C,GAAJ,CAAWnF,OAAX,wBAAuCoF,QAAvC,cACPyC,KADO;AAEVpD,MAAAA,WAAW,EAAEiD;AAFH,OAAZ;AAKA,WAAOI,GAAG,CAACpC,QAAJ,EAAP;AACD;;SAEMqC,QAAA;AACL,WAAO,KAAKxE,MAAL,CAAY3D,GAAZ,CAAwC,aAAxC,CAAP;AACD;;SAEMoI,MAAA,aAAIX,EAAJ;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,kBACUyH,EADV,CAAP;AAGD;;SAEMY,aAAA,oBAAWZ,EAAX;wBAID,KAAK9D;QAFPmE,sBAAAA;QACW1H,wBAAX+D,QAAW/D;AAGb,WAAUA,OAAV,oBAAgCqH,EAAhC,0BAAuDK,KAAvD;AACD;;SAEMQ,UAAA,iBAAQb,EAAR,EAA8BhJ,IAA9B;AACL,WAAO,KAAKkF,MAAL,CAAYM,IAAZ,kBAAgCwD,EAAhC,YAA2C;AAAEhJ,MAAAA,IAAI,EAAJA;AAAF,KAA3C,CAAP;AACD;;SAEM8J,SAAA,gBAAOrC,GAAP;AACL,WAAO,KAAKvC,MAAL,CAAYM,IAAZ,CAAsC,sBAAtC,EAA8D;AACnExF,MAAAA,IAAI,EAAE6C,wBAAwB,CAAC4E,GAAD;AADqC,KAA9D,CAAP;AAGD;;SAEMsC,SAAA,gBAAOtC,GAAP;AACL,WAAO,KAAKvC,MAAL,CAAYM,IAAZ,kBAAqDiC,GAAG,CAACuB,EAAzD,EAA+D;AACpEhJ,MAAAA,IAAI,EAAE6C,wBAAwB,CAAC4E,GAAD;AADsC,KAA/D,CAAP;AAGD;;SAEMuC,SAAA,gBAAOhB,EAAP;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,kBAAgCwD,EAAhC,aAAP;AACD;;SAEMiB,kBAAA,yBAAgBjB,EAAhB;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,kBACUwD,EADV,uBAAP;AAGD;;SAEMkB,iBAAA;AACL,WAAO,KAAKhF,MAAL,CAAY3D,GAAZ,CAA6C,qBAA7C,CAAP;AACD;;;;;ICnEkB4I;AAGnB,yBAAYjF,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEM4E,SAAA;wBACLM;QAAAA,4BAAM;QACNC,cAAAA;+BACAC;QAAAA,0CAAa;AAMb,WAAO,KAAKpF,MAAL,CAAYM,IAAZ,CACL,wBADK,EAEL;AACExF,MAAAA,IAAI,EAAE;AACJuK,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT,CADN;AAEJC,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAFT;AAGJH,QAAAA,MAAM,EAANA;AAHI;AADR,KAFK,CAAP;AAUD;;SAEMV,MAAA,aAAIe,eAAJ;AACL,WAAO,KAAKxF,MAAL,CAAY3D,GAAZ,sBACcmJ,eADd,CAAP;AAGD;;;;;ICnCkBC;AAGnB,mBAAYzF,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEM0F,QAAA;wBACLR;QAAAA,4BAAM;QACNC,cAAAA;+BACAC;QAAAA,0CAAa;6BACbO;QAAAA,sCAAW;AAOX,WAAO,KAAK3F,MAAL,CAAYM,IAAZ,CAAwC,gBAAxC,EAA0D;AAC/DxF,MAAAA,IAAI,EAAE;AACJuK,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT,CADN;AAEJC,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAFT;AAGJM,QAAAA,SAAS,EAAED,QAHP;AAIJR,QAAAA,MAAM,EAANA;AAJI;AADyD,KAA1D,CAAP;AAQD;;SAEMU,YAAA,mBAAUC,WAAV;AACL,WAAO,KAAK9F,MAAL,CAAY3D,GAAZ,qBACayJ,WADb,CAAP;AAGD;;;;;ICjCkBC;AAGnB,kBAAY/F,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMgG,OAAA;AACL,WAAO,KAAKhG,MAAL,CAAY3D,GAAZ,CAAoC,SAApC,CAAP;AACD;;SAEM4J,QAAA,eAAcpL,MAAd;AACL,WAAO,KAAKmF,MAAL,CAAYwC,GAAZ,CAAoB,SAApB,EAA+B;AACpC1H,MAAAA,IAAI,EAAE;AAAED,QAAAA,MAAM,EAANA;AAAF;AAD8B,KAA/B,CAAP;AAGD;;SAEMqL,SAAA,gBAAyClI,GAAzC;AACL,WAAO,KAAKgC,MAAL,CAAY3D,GAAZ,cAAmD2B,GAAnD,CAAP;AACD;;SAEMmI,SAAA,gBACLnI,GADK,EAELgF,KAFK;AAIL,WAAO,KAAKhD,MAAL,CAAYwC,GAAZ,cAA+BxE,GAA/B,EAAsC;AAC3ClD,MAAAA,IAAI,EAAE;AAAEkI,QAAAA,KAAK,EAALA;AAAF;AADqC,KAAtC,CAAP;AAGD;;SAEMoD,YAAA,mBAA4CpI,GAA5C;AACL,WAAO,KAAKgC,MAAL,wBAAkChC,GAAlC,CAAP;AACD;;;;;IC3BkBqI;AAGnB,uBAAYrG,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMwE,QAAA;AACL,WAAO,KAAKxE,MAAL,CAAY3D,GAAZ,CAAkC,cAAlC,CAAP;AACD;;SAEMyI,SAAA,gBAAOhB,EAAP;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,qBAAgEwD,EAAhE,CAAP;AACD;;SAEMvD,QAAA;AACL,WAAO,KAAKP,MAAL,CAAYM,IAAZ,CAAiD,gBAAjD,CAAP;AACD;;;;;ICtBkBgG;AAGnB,kBAAYtG,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMuG,aAAA;AACL,WAAO,KAAKvG,MAAL,CAAY3D,GAAZ,CAAgB,iBAAhB,CAAP;AACD;;SAEMmK,eAAA;AACL,WAAO,KAAKxG,MAAL,CAAYM,IAAZ,CAAiB,qBAAjB,CAAP;AACD;;SAEMmG,eAAA,sBAAapE,QAAb;AACL,WAAO,KAAKrC,MAAL,oCAA0CqC,QAA1C,CAAP;AACD;;SAEMqE,OAAA,cAAKC,cAAL;AACL,WAAO,KAAK3G,MAAL,CAAYM,IAAZ,mBAAiCqG,cAAjC,CAAP;AACD;;;;;ICpBkBC;AAGnB,gBAAY5G,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEM6G,SAAA,gBACLC,UADK;kCAOD;oCAJFC;QAAAA,oDAAkB;qCAClBC;QAAAA,yDAAsB;iCACtBC;QAAAA,8CAAe;oCACfC;QAAAA,oDAAkB;;AAGpB,WAAO,KAAKlH,MAAL,CAAY3D,GAAZ,CAAgB,eAAhB,EAAiC;AACtC6D,MAAAA,MAAM,EAAE;AACNiH,QAAAA,aAAa,EAAEF,YADT;AAENG,QAAAA,iBAAiB,EAAEF,eAFb;AAGNG,QAAAA,iBAAiB,EAAEN,eAHb;AAINO,QAAAA,qBAAqB,EAAE,CAJjB;AAKNpG,QAAAA,WAAW,EAAE4F,UALP;AAMNS,QAAAA,iBAAiB,EAAE,CANb;AAONC,QAAAA,qBAAqB,EAAER;AAPjB;AAD8B,KAAjC,CAAP;AAWD;;SAEMS,WAAA,kBAASC,MAAT;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,eAAP;AACD;;SAEMC,gBAAA,uBAAcD,MAAd;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,UAAP;AACD;;SAEME,aAAA,oBAAWF,MAAX;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,aAAP;AACD;;SAEMG,YAAA,mBAAUH,MAAV,EAA0BZ,UAA1B,EAA8CgB,SAA9C;AACL,WAAO,KAAK9H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,iBAA8C;AACnDxH,MAAAA,MAAM,EAAE;AACN4H,QAAAA,SAAS,EAATA,SADM;AAEN5G,QAAAA,WAAW,EAAE4F;AAFP;AAD2C,KAA9C,CAAP;AAMD;;SAEMiB,kBAAA,yBACLL,MADK;oCAYD;4BATFvD;QAAAA,iCAAQ;sCACR6D;QAAAA,uDAAoB;QACpBC,yBAAAA;QACAC,qBAAAA;;AAQF,WAAO,IAAItG,GAAJ,CACF,KAAK5B,MAAL,CAAYQ,OAAZ,CAAoB/D,OADlB,eACmCiL,MADnC,sBAGJ7F,QAHI,CAGK;AACRX,MAAAA,WAAW,EAAEiD,KAAK,IAAI,KAAKnE,MAAL,CAAYmE,KAD1B;AAERgE,MAAAA,kBAAkB,EAAEH,iBAFZ;AAGRI,MAAAA,kBAAkB,EAAEH,gBAHZ;AAIRI,MAAAA,QAAQ,EACN,OAAOH,YAAP,KAAwB,SAAxB,GACIA,YAAY,GACV,CADU,GAEV,CAHN,GAIII;AATE,KAHL,EAcJnG,QAdI,EAAP;AAeD;;SAEMoG,eAAA,sBAAab,MAAb;AACL,WAAO,KAAK1H,MAAL,CAAYM,IAAZ,aACKoH,MADL,UAAP;AAGD;;SAEMc,gBAAA,uBAAcd,MAAd;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aACKqL,MADL,UAAP;AAGD;;SAEMe,YAAA,mBAAUf,MAAV;AACL,WAAO,KAAK1H,MAAL,uBAAiC0H,MAAjC,UAAP;AACD;;SAEMgB,aAAA,oBAAWhB,MAAX;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,kBAAP;AACD;;SAEMiB,UAAA,iBAAQjB,MAAR,EAAwBkB,OAAxB;AACL,QAAIC,MAAM,GAAGD,OAAb;;AAEA,QAAIC,MAAJ,EAAY;AACVA,MAAAA,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcF,MAAd,IACLA,MAAM,CAACG,GAAP,CAAW,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC9G,QAAF,EAAJ;AAAA,OAAZ,CADK,GAEL,CAAC0G,MAAM,CAAC1G,QAAP,EAAD,CAFJ;AAGA0G,MAAAA,MAAM,GAAGA,MAAM,CAACvD,IAAP,CAAY,GAAZ,CAAT;AACD;;AAED,WAAO,KAAKtF,MAAL,CAAYM,IAAZ,aAA2BoH,MAA3B,eAA6C;AAClD5M,MAAAA,IAAI,EAAE;AACJ+N,QAAAA,MAAM,EAAEA,MAAM,IAAI;AADd;AAD4C,KAA7C,CAAP;AAKD;;SAEMK,YAAA,mBAAUxB,MAAV;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,4BAAP;AACD;;SAEMyB,SAAA,gBAAOzB,MAAP,EAAuBrM,IAAvB;AACL,WAAO,KAAK2E,MAAL,CAAYM,IAAZ,CAAiB,eAAjB,EAAkC;AACvCxF,MAAAA,IAAI,EAAE;AACJsO,QAAAA,OAAO,EAAE1B,MADL;AAEJrM,QAAAA,IAAI,EAAJA;AAFI;AADiC,KAAlC,CAAP;AAMD;;SAEMgO,eAAA,sBAAa3B,MAAb;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aACKqL,MADL,iBAAP;AAGD;;SAEM4B,eAAA,sBAAa5B,MAAb,EAA6B6B,IAA7B;AACL,WAAO,KAAKvJ,MAAL,CAAYM,IAAZ,aAA2BoH,MAA3B,sBAAoD;AACzD5M,MAAAA,IAAI,EAAE;AACJyO,QAAAA,IAAI,EAAEC,QAAQ,CAACD,IAAD,EAAO,EAAP;AADV;AADmD,KAApD,CAAP;AAKD;;SAEME,iBAAA,wBAAe/B,MAAf;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,wBAAP;AACD;;SAEMgC,UAAA,iBAAQhC,MAAR,EAAwBpF,QAAxB;AACL,WAAO,KAAKtC,MAAL,CAAYM,IAAZ,CAAiB,gBAAjB,EAAmC;AACxCxF,MAAAA,IAAI,EAAE;AACJwH,QAAAA,QAAQ,EAARA,QADI;AAEJqH,QAAAA,aAAa,EAAE,CAACjC,MAAM,CAACvF,QAAP,EAAD;AAFX;AADkC,KAAnC,CAAP;AAMD;;SAEMyH,mBAAA,0BAAiBlC,MAAjB;AACL,WAAO,KAAK1H,MAAL,CAAYM,IAAZ,aAA2BoH,MAA3B,mBAAP;AACD;;SAEMmC,mBAAA,0BAAiB/F,EAAjB;AACL,WAAO,KAAK9D,MAAL,mCAAyC8D,EAAzC,CAAP;AACD;;SAEMgG,eAAA,sBAAapC,MAAb,EAA6BqC,QAA7B;AACL,WAAO,KAAK/J,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,iBAA8C;AACnDxH,MAAAA,MAAM,EAAE;AAAE8J,QAAAA,SAAS,EAAED;AAAb;AAD2C,KAA9C,CAAP;AAGD;;SAEME,gBAAA,uBAAcvC,MAAd;AACL,WAAO,KAAK1H,MAAL,CAAY3D,GAAZ,aAA0BqL,MAA1B,iBAAP;AACD;;;;;ICzKkBwC;AAGnB,iBAAYlK,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMwE,QAAA,eACLV,EADK;kCAsCD;QAnCFqG,eAAAA;QACAC,cAAAA;QACAC,mBAAAA;QACAN,gBAAAA;QACAO,iBAAAA;QACAC,uBAAAA;QACAC,oBAAAA;QACAC,0BAAAA;QACAC,cAAAA;QACAC,iBAAAA;QACA5D,uBAAAA;QACA6D,qBAAAA;QACA5D,2BAAAA;QACAC,oBAAAA;QACAC,uBAAAA;QACA2D,mBAAAA;QACAC,aAAAA;;AAqBF,WAAO,KAAK9K,MAAL,CAAY3D,GAAZ,cACKyH,EAAE,KAAK,SAAP,GAAmB,uBAAnB,GAA6C,MADlD,GAEL;AACE5D,MAAAA,MAAM,EAAE;AACN0F,QAAAA,SAAS,EAAE9B,EAAE,KAAK,SAAP,GAAmBA,EAAnB,GAAwB,IAD7B;AAENiH,QAAAA,QAAQ,EAAEZ,OAFJ;AAGNa,QAAAA,OAAO,EAAEZ,MAHH;AAINa,QAAAA,YAAY,EAAEZ,WAJR;AAKNL,QAAAA,SAAS,EAAED,QALL;AAMNmB,QAAAA,UAAU,EAAEZ,SANN;AAON/C,QAAAA,iBAAiB,EAAEgD,eAPb;AAQNY,QAAAA,cAAc,EAAEX,YARV;AASNlD,QAAAA,qBAAqB,EAAEmD,kBATjB;AAUNC,QAAAA,MAAM,EAANA,MAVM;AAWNU,QAAAA,UAAU,EAAET,SAXN;AAYNtD,QAAAA,iBAAiB,EAAEN,eAZb;AAaNsE,QAAAA,cAAc,EAAET,aAbV;AAcNpD,QAAAA,qBAAqB,EAAER,mBAdjB;AAeNG,QAAAA,aAAa,EAAEF,YAfT;AAgBNG,QAAAA,iBAAiB,EAAEF,eAhBb;AAiBN2D,QAAAA,WAAW,EAAXA,WAjBM;AAkBNC,QAAAA,KAAK,EAALA;AAlBM;AADV,KAFK,CAAP;AAyBD;;SAEMQ,WAAA,kBAASnG,MAAT;oCAA6D;QAAlCgF,gBAAAA;;AAChC,WAAO,KAAKnK,MAAL,CAAYM,IAAZ,CAAiB,sBAAjB,EAAyC;AAC9CxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA;AADI,OADwC;AAI9CjF,MAAAA,MAAM,EAAE;AACN6K,QAAAA,QAAQ,EAAEZ;AADJ;AAJsC,KAAzC,CAAP;AAQD;;SAEMoB,SAAA,gBACLjH,KADK;oCAKsD;AAAE6F,MAAAA,OAAO,EAAE;AAAX;QAFzDA,gBAAAA;QACAJ,iBAAAA;;AAGF,WAAO,KAAK/J,MAAL,CAAY3D,GAAZ,CAAiC,eAAjC,EAAkD;AACvD6D,MAAAA,MAAM,EAAE;AACNoE,QAAAA,KAAK,EAALA,KADM;AAENyG,QAAAA,QAAQ,EAAEZ,OAFJ;AAGNtJ,QAAAA,IAAI,EAAEkJ;AAHA;AAD+C,KAAlD,CAAP;AAOD;;SAEMyB,iBAAA,wBACLrG,MADK;oCAE+B;QAAlCgF,gBAAAA;;AAEF,WAAO,KAAKnK,MAAL,CAAYM,IAAZ,CAAkC,wBAAlC,EAA4D;AACjExF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA;AADI,OAD2D;AAIjEjF,MAAAA,MAAM,EAAE;AACN6K,QAAAA,QAAQ,EAAEZ;AADJ;AAJyD,KAA5D,CAAP;AAQD;;SAEMsB,YAAA,mBAAUpQ,IAAV,EAAwBsK,QAAxB;QAAwBA;AAAAA,MAAAA,WAAmB;;;AAChD,WAAO,KAAK+F,YAAL,CAAkB;AAAErQ,MAAAA,IAAI,EAAJA,IAAF;AAAQsK,MAAAA,QAAQ,EAARA;AAAR,KAAlB,CAAP;AACD;;SAEM+F,eAAA;QACLrQ,aAAAA;QACAsK,iBAAAA;QACAgG,aAAAA;AAMA,WAAO,KAAK3L,MAAL,CAAYM,IAAZ,CAAiB,sBAAjB,EAAyC;AAC9CxF,MAAAA,IAAI,EAAE;AACJO,QAAAA,IAAI,EAAJA,IADI;AAEJuK,QAAAA,SAAS,EAAED,QAFP;AAGJgG,QAAAA,IAAI,EAAJA;AAHI;AADwC,KAAzC,CAAP;AAOD;;SAEMC,YAAA,mBACLzG,MADK,EAELC,UAFK;QAELA;AAAAA,MAAAA,aAAuB;;;oCAErByG;QAAAA,iDAAgB;QAChBC,kBAAAA;AAMF,WAAO,KAAK9L,MAAL,CAAYM,IAAZ,CAAsC,eAAtC,EAAuD;AAC5DxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA,MADI;AAEJI,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB;AAFT,OADsD;AAK5DpF,MAAAA,MAAM,EAAE;AACN6L,QAAAA,iBAAiB,EAAE,IADb;AAENC,QAAAA,cAAc,EAAEH,aAFV;AAGNI,QAAAA,UAAU,EAAEH;AAHN;AALoD,KAAvD,CAAP;AAWD;;SAEMhH,SAAA,gBACLI,GADK;QACLA;AAAAA,MAAAA,MAAgB;;;oCASZ;sCAPFgH;QAAAA,qDAAkB;oCAClBL;QAAAA,iDAAgB;QAChBC,kBAAAA;;AAOF,WAAO,KAAK9L,MAAL,CAAYM,IAAZ,CAAsC,eAAtC,EAAuD;AAC5DxF,MAAAA,IAAI,EAAE;AACJuK,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT;AADN,OADsD;AAI5DpF,MAAAA,MAAM,EAAE;AACN6L,QAAAA,iBAAiB,EAAE,IADb;AAENI,QAAAA,gBAAgB,EAAED,eAFZ;AAGNF,QAAAA,cAAc,EAAEH,aAHV;AAINI,QAAAA,UAAU,EAAEH;AAJN;AAJoD,KAAvD,CAAP;AAWD;;SAEMpC,UAAA;0BACLxE;QAAAA,6BAAM;QACNC,eAAAA;iCACAC;QAAAA,2CAAa;AAMb,WAAO,KAAKpF,MAAL,CAAYM,IAAZ,CAAiB,gBAAjB,EAAmC;AACxCxF,MAAAA,IAAI,EAAE;AACJ6O,QAAAA,aAAa,EAAEzE,GAAG,CAACI,IAAJ,CAAS,GAAT,CADX;AAEJC,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAFT;AAGJH,QAAAA,MAAM,EAANA;AAHI;AADkC,KAAnC,CAAP;AAOD;;SAEMiH,gBAAA;AACL,WAAO,KAAKpM,MAAL,CAAY3D,GAAZ,CAAgB,gBAAhB,CAAP;AACD;;SAEMgQ,QAAA;0BACLnH;QAAAA,6BAAM;QACNC,eAAAA;iCACAC;QAAAA,2CAAa;QACbkH,gBAAAA;AAOA,WAAO,KAAKtM,MAAL,CAAYM,IAAZ,CAAiB,cAAjB,EAAiC;AACtCxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA,MADI;AAEJmH,QAAAA,OAAO,EAAPA,OAFI;AAGJjH,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT,CAHN;AAIJC,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB;AAJT;AADgC,KAAjC,CAAP;AAQD;;SAEMiH,OAAA,cAAKrH,GAAL,EAAoBsH,EAApB;AACL,WAAO,KAAKxM,MAAL,CAAYM,IAAZ,CAAiB,aAAjB,EAAgC;AACrCxF,MAAAA,IAAI,EAAE;AACJuK,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT,CADN;AAEJM,QAAAA,SAAS,EAAE4G;AAFP;AAD+B,KAAhC,CAAP;AAMD;;SAEMC,UAAA;QACLtH,gBAAAA;mCACAC;QAAAA,4CAAa;QACboH,YAAAA;AAMA,WAAO,KAAKxM,MAAL,CAAYM,IAAZ,CAAiB,aAAjB,EAAgC;AACrCxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA,MADI;AAEJS,QAAAA,SAAS,EAAE4G,EAFP;AAGJjH,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB;AAHT;AAD+B,KAAhC,CAAP;AAOD;;SAEMiD,eAAA;4BACLrD;QAAAA,8BAAM;QACNC,gBAAAA;mCACAC;QAAAA,4CAAa;AAMb,WAAO,KAAKpF,MAAL,CAAYM,IAAZ,CAAiB,oBAAjB,EAAuC;AAC5CxF,MAAAA,IAAI,EAAE;AACJuK,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT,CADN;AAEJC,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAFT;AAGJH,QAAAA,MAAM,EAANA;AAHI;AADsC,KAAvC,CAAP;AAOD;;SAEMuH,aAAA;AACL,WAAO,KAAK1M,MAAL,CAAY3D,GAAZ,CAAgB,eAAhB,CAAP;AACD;;SAEMsQ,eAAA;AACL,WAAO,KAAK3M,MAAL,CAAY3D,GAAZ,CAAgB,oBAAhB,CAAP;AACD;;SAEMuQ,iBAAA;4BACL1H;QAAAA,8BAAM;QACNC,gBAAAA;mCACAC;QAAAA,4CAAa;QACbyH,iBAAAA;AAOA,WAAO,KAAK7M,MAAL,CAAYM,IAAZ,CAAiB,qBAAjB,EAAwC;AAC7CxF,MAAAA,IAAI,EAAE;AACJuK,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT,CADN;AAEJC,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAFT;AAGJH,QAAAA,MAAM,EAANA,MAHI;AAIJ0H,QAAAA,OAAO,EAAPA;AAJI;AADuC,KAAxC,CAAP;AAQD;;SAEMC,SAAA;QACLC,cAAAA;QACAC,kBAAAA;iCACArH;QAAAA,wCAAW;AAMX,QAAMsH,IAAI,GAAG,IAAI/O,QAAJ,EAAb;AACA+O,IAAAA,IAAI,CAAChP,MAAL,CAAY,MAAZ,EAAoB8O,IAApB;;AAEA,QAAIC,QAAJ,EAAc;AACZC,MAAAA,IAAI,CAAChP,MAAL,CAAY,UAAZ,EAAwB+O,QAAxB;AACD;;AAED,QAAIrH,QAAJ,EAAc;AACZsH,MAAAA,IAAI,CAAChP,MAAL,CAAY,WAAZ,EAAyB0H,QAAQ,CAACxD,QAAT,EAAzB;AACD;;AAED,WAAO,KAAKnC,MAAL,CAAYM,IAAZ,CAAiB,eAAjB,EAAkC;AACvCxF,MAAAA,IAAI,EAAEmS,IADiC;AAEvChS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAF8B,KAAlC,CAAP;AAMD;;;;;IC9UkBiS;AAGnB,yBAAYlN,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMmN,SAAA;AACL,WAAO,KAAKnN,MAAL,CAAY3D,GAAZ,CAAwC,yBAAxC,CAAP;AACD;;SAEMuI,SAAA;AACL,WAAO,KAAK5E,MAAL,CAAYM,IAAZ,CACL,mCADK,CAAP;AAGD;;;;;ICfkB8M;AAGnB,mBAAYpN,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMwE,QAAA;AACL,WAAO,KAAKxE,MAAL,CAAY3D,GAAZ,CAAqC,eAArC,CAAP;AACD;;SAEMkP,SAAA,gBAAOlJ,QAAP;AACL,WAAO,KAAKrC,MAAL,CAAY3D,GAAZ,2BACmBgG,QADnB,CAAP;AAGD;;SAEMgL,kBAAA;AACL,WAAO,KAAKrN,MAAL,CAAY3D,GAAZ,CAAgB,2BAAhB,CAAP;AACD;;SAEMiR,uBAAA;AACL,WAAO,KAAKtN,MAAL,CAAY3D,GAAZ,CAAgB,iCAAhB,CAAP;AACD;;SAEMkR,uBAAA,8BAAqBlL,QAArB;AACL,WAAO,KAAKrC,MAAL,CAAYM,IAAZ,eAA6B+B,QAA7B,cAAP;AACD;;SAEMmL,SAAA,gBAAOnL,QAAP;AACL,WAAO,KAAKrC,MAAL,CAAYM,IAAZ,eAA6B+B,QAA7B,eAAP;AACD;;SAEMoL,UAAA,iBAAQpL,QAAR;AACL,WAAO,KAAKrC,MAAL,CAAYM,IAAZ,eAA6B+B,QAA7B,cAAP;AACD;;SAEMqL,OAAA,cAAKrL,QAAL;AACL,WAAO,KAAKrC,MAAL,CAAYM,IAAZ,eAA6B+B,QAA7B,WAAP;AACD;;SAEMsL,eAAA,sBAAatL,QAAb;AACL,WAAO,KAAKrC,MAAL,CAAY3D,GAAZ,eAA4BgG,QAA5B,YAAP;AACD;;;;;IC5CkBuL;AAGnB,iBAAY5N,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEM6N,YAAA;QACLnM,kBAAAA;QACAoM,iBAAAA;gCACAC;QAAAA,4CAAc;AAMd,WAAO,KAAK/N,MAAL,CAAYM,IAAZ,CAAiB,qBAAjB,EAAwC;AAC7CxF,MAAAA,IAAI,EAAE;AACJiH,QAAAA,WAAW,EAAEL,UADT;AAEJsM,QAAAA,UAAU,EAAEF,SAFR;AAGJC,QAAAA,WAAW,EAAXA;AAHI;AADuC,KAAxC,CAAP;AAOD;;;;;ICjBkBE;AAGnB,mBAAYjO,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMC,OAAA;AACL,WAAO,KAAKD,MAAL,CAAY3D,GAAZ,CAA0C,eAA1C,CAAP;AACD;;SAEM6R,QAAA;AACL,WAAO,KAAKlO,MAAL,CAAY3D,GAAZ,CAAgB,gBAAhB,CAAP;AACD;;SAEM8R,UAAA;AACL,WAAO,KAAKnO,MAAL,CAAY3D,GAAZ,CAAyC,kBAAzC,CAAP;AACD;;SAEM+R,UAAA;kCAAqC;mCAA3BC;QAAAA,kDAAiB;;AAChC,WAAO,KAAKrO,MAAL,CAAY3D,GAAZ,CAAgB,kBAAhB,EAAoC;AACzC6D,MAAAA,MAAM,EAAE;AACNoO,QAAAA,eAAe,EAAED;AADX;AADiC,KAApC,CAAP;AAKD;;SAEME,UAAA;AACL,WAAO,KAAKvO,MAAL,CAAY3D,GAAZ,CAAgB,kBAAhB,CAAP;AACD;;SAEMmS,oBAAA;QACLC,iBAAAA;QACAC,oBAAAA;QACAC,mBAAAA;AAMA,WAAO,KAAK3O,MAAL,CAAY3D,GAAZ,2BAAwCoS,QAAxC,EAAoD;AACzDvO,MAAAA,MAAM,EAAE;AACN0O,QAAAA,WAAW,EAAED,UADP;AAENE,QAAAA,YAAY,EAAEH;AAFR;AADiD,KAApD,CAAP;AAMD;;SAEMI,oBAAA;QACLL,iBAAAA;QACAC,oBAAAA;QACAC,mBAAAA;QACAI,yBAAAA;AAOA,WAAO,KAAK/O,MAAL,CAAYM,IAAZ,2BAAyCmO,QAAzC,EAAqD;AAC1D3T,MAAAA,IAAI,EAAE;AACJ+T,QAAAA,YAAY,EAAEH,WADV;AAEJM,QAAAA,iBAAiB,EAAED;AAFf,OADoD;AAK1D7O,MAAAA,MAAM,EAAE;AACN0O,QAAAA,WAAW,EAAED;AADP;AALkD,KAArD,CAAP;AASD;;SAEMM,aAAA,oBAAWC,IAAX;AACL,WAAO,KAAKJ,iBAAL,CAAuBI,IAAvB,CAAP;AACD;;SAEMC,2BAAA;QAA2BC,iBAAAA;AAChC,WAAO,KAAKpP,MAAL,CAAYM,IAAZ,CACL,+BADK,EAEL;AACExF,MAAAA,IAAI,EAAE;AACJuU,QAAAA,SAAS,EAAED;AADP;AADR,KAFK,CAAP;AAQD;;SAEME,uBAAA,8BAAqB3D,IAArB;AACL,WAAO,KAAK3L,MAAL,CAAYM,IAAZ,CAAiB,kCAAjB,EAAqD;AAC1DxF,MAAAA,IAAI,EAAE;AACJyU,QAAAA,YAAY,EAAE5D;AADV;AADoD,KAArD,CAAP;AAKD;;SAEM6D,yBAAA,gCAAuB7D,IAAvB;AACL,WAAO,KAAK3L,MAAL,CAAYM,IAAZ,CAAiB,oCAAjB,EAAuD;AAC5DxF,MAAAA,IAAI,EAAE;AACJyU,QAAAA,YAAY,EAAE5D;AADV;AADsD,KAAvD,CAAP;AAKD;;SAEM8D,qBAAA;AACL,WAAO,KAAKzP,MAAL,CAAYM,IAAZ,CAAiB,4BAAjB,CAAP;AACD;;SAEMoP,iBAAA,wBAAejQ,IAAf;AACL,WAAO,KAAKO,MAAL,CAAY3D,GAAZ,8BACsBoD,IADtB,CAAP;AAGD;;SAEMkQ,gBAAA,uBAAclQ,IAAd;AACL,WAAO,KAAKO,MAAL,CAAYM,IAAZ,8BAA4Cb,IAA5C,CAAP;AACD;;SAEMmQ,0BAAA,iCAAwBC,SAAxB;AACL,WAAO,KAAK7P,MAAL,CAAY3D,GAAZ,0BAAuCwT,SAAvC,CAAP;AACD;;SAEMC,SAAA,gBAAOC,UAAP;QAAOA;AAAAA,MAAAA,aAAa;;;AACzB,WAAO,KAAK/P,MAAL,CAAYM,IAAZ,CAAiB,iBAAjB,EAAoC;AACzCxF,MAAAA,IAAI,EAAE;AACJkV,QAAAA,WAAW,EAAED,UAAU,CAACzK,IAAX,CAAgB,GAAhB;AADT;AADmC,KAApC,CAAP;AAKD;;SAEM2K,oBAAA,2BAAkBnV,IAAlB;AACL,WAAO,KAAKkF,MAAL,CAAYM,IAAZ,CAAiB,iCAAjB,EAAoD;AAAExF,MAAAA,IAAI,EAAJA;AAAF,KAApD,CAAP;AACD;;;;;ICtIkBoV;AAGnB,eAAYlQ,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMwE,QAAA;AACL,WAAO,KAAKxE,MAAL,CAAY3D,GAAZ,CAAsC,WAAtC,CAAP;AACD;;SAEMoI,MAAA,aAAIX,EAAJ;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,WAA2CyH,EAA3C,CAAP;AACD;;SAEMc,SAAA,gBAAOuL,GAAP;AACL,WAAO,KAAKnQ,MAAL,CAAYM,IAAZ,CAAoC,aAApC,EAAmD;AACxDxF,MAAAA,IAAI,EAAEqV;AADkD,KAAnD,CAAP;AAGD;;SAEMtL,SAAA,gBAAOf,EAAP,EAA0BqM,GAA1B;AACL,WAAO,KAAKnQ,MAAL,CAAYM,IAAZ,WAA6BwD,EAA7B,EAAmC;AACxChJ,MAAAA,IAAI,EAAEqV;AADkC,KAAnC,CAAP;AAGD;;SAEMC,QAAA,eAAMtM,EAAN;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,WAA6BwD,EAA7B,YAAP;AACD;;SAEMuM,SAAA,gBAAOvM,EAAP;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,WAA6BwD,EAA7B,aAAP;AACD;;SAEMgB,SAAA,gBAAOhB,EAAP;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,WAA6BwD,EAA7B,aAAP;AACD;;SAEMwM,OAAA,cAAKxM,EAAL;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,WAGIyH,EAHJ,YAAP;AAID;;SAEMyM,YAAA,mBAAUzM,EAAV;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,WAA6BwD,EAA7B,gBAAP;AACD;;SAEM0M,YAAA,mBAAU1M,EAAV,EAA6B2M,MAA7B;AACL,WAAO,KAAKzQ,MAAL,CAAYM,IAAZ,WAA6BwD,EAA7B,eAAyC2M,MAAzC,YAAP;AACD;;;;;IC/CkBC;AAGnB,oBAAY1Q,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEM2Q,MAAA,aAAIzQ,MAAJ;AACL,WAAO,KAAKF,MAAL,CAAYM,IAAZ,CAAyC,gBAAzC,EAA2D;AAChExF,MAAAA,IAAI,EAAEoF;AAD0D,KAA3D,CAAP;AAGD;;SAEM0Q,WAAA,kBAAS1Q,MAAT;AACL,WAAO,KAAKF,MAAL,CAAYM,IAAZ,CAGJ,sBAHI,EAGoB;AACzBxF,MAAAA,IAAI,EAAE;AACJ+V,QAAAA,IAAI,EAAElR,IAAI,CAACmR,SAAL,CAAe5Q,MAAf;AADF;AADmB,KAHpB,CAAP;AAQD;;SAEMuE,MAAA,aAAIX,EAAJ;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,iBAAsDyH,EAAtD,CAAP;AACD;;SAEMU,QAAA;kCAAkE;QAA1D2F,eAAAA;QAASW,aAAAA;;AACtB,WAAO,KAAK9K,MAAL,CAAY3D,GAAZ,CAAoC,iBAApC,EAAuD;AAC5D6D,MAAAA,MAAM,EAAE;AACN6K,QAAAA,QAAQ,EAAEZ,OADJ;AAENW,QAAAA,KAAK,EAALA;AAFM;AADoD,KAAvD,CAAP;AAMD;;SAEMQ,WAAA,kBAASnG,MAAT;oCAA6D;QAAlCgF,gBAAAA;;AAChC,WAAO,KAAKnK,MAAL,CAAYM,IAAZ,CAAqC,0BAArC,EAAiE;AACtExF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA,MADI;AAEJ4F,QAAAA,QAAQ,EAAEZ;AAFN;AADgE,KAAjE,CAAP;AAMD;;SAEM4G,WAAA;AACL,WAAO,KAAK/Q,MAAL,CAAYM,IAAZ,CAAqB,kBAArB,CAAP;AACD;;SAEM0Q,SAAA,gBAAO9L,GAAP;QAAOA;AAAAA,MAAAA,MAAgB;;;AAC5B,WAAO,KAAKlF,MAAL,CAAYM,IAAZ,CAAqB,mBAArB,EAA0C;AAC/CxF,MAAAA,IAAI,EAAE;AACJmW,QAAAA,YAAY,EAAE/L,GAAG,CAACI,IAAJ,CAAS,GAAT;AADV;AADyC,KAA1C,CAAP;AAKD;;SAEM4L,QAAA,eAAMpN,EAAN;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,CAAiB,kBAAjB,EAAqC;AAC1CxF,MAAAA,IAAI,EAAE;AAAEgJ,QAAAA,EAAE,EAAFA;AAAF;AADoC,KAArC,CAAP;AAGD;;SAEMqN,aAAA,oBAAWrN,EAAX;AACL,WAAO,KAAK9D,MAAL,CAAYM,IAAZ,CAAiB,uBAAjB,EAA0C;AAC/CxF,MAAAA,IAAI,EAAE;AAAEgJ,QAAAA,EAAE,EAAFA;AAAF;AADyC,KAA1C,CAAP;AAGD;;SAEMsN,QAAA;AACL,WAAO,KAAKpR,MAAL,CAAY3D,GAAZ,CAAmC,kBAAnC,CAAP;AACD;;;;;IC9EkBgV;AAGnB,iBAAYrR,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMsR,OAAA;kCAAsB;0BAAfC;QAAAA,gCAAQ;;AACpB,WAAO,KAAKvR,MAAL,CAAY3D,GAAZ,CAAgB,aAAhB,EAA+B;AACpC6D,MAAAA,MAAM,EAAE;AACN6K,QAAAA,QAAQ,EAAEwG;AADJ;AAD4B,KAA/B,CAAP;AAKD;;SAEMjG,WAAA,kBAASnG,MAAT;oCAA0C;4BAAfoM;QAAAA,iCAAQ;;AACxC,WAAO,KAAKvR,MAAL,CAAYM,IAAZ,CAAiB,sBAAjB,EAAyC;AAC9CxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA,MADI;AAEJ4F,QAAAA,QAAQ,EAAEwG;AAFN;AADwC,KAAzC,CAAP;AAMD;;SAEMC,UAAA;gCACLC;QAAAA,yCAAY;0BACZvM;QAAAA,6BAAM;QACNC,eAAAA;AAMA,WAAO,KAAKnF,MAAL,CAAYM,IAAZ,CAAiB,gBAAjB,EAAmC;AACxCxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAAEsM,SAAS,GAAGtM,MAAH,GAAYmD,SADzB;AAEJjD,QAAAA,QAAQ,EAAE,CAACoM,SAAD,GAAavM,GAAG,CAACI,IAAJ,CAAS,GAAT,CAAb,GAA6BgD;AAFnC;AADkC,KAAnC,CAAP;AAMD;;SAEMxD,SAAA;gCACL2M;QAAAA,yCAAY;0BACZvM;QAAAA,6BAAM;QACNC,eAAAA;AAMA,WAAO,KAAKnF,MAAL,CAAYM,IAAZ,CAAiB,eAAjB,EAAkC;AACvCxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAAEsM,SAAS,GAAGtM,MAAH,GAAYmD,SADzB;AAEJjD,QAAAA,QAAQ,EAAE,CAACoM,SAAD,GAAavM,GAAG,CAACI,IAAJ,CAAS,GAAT,CAAb,GAA6BgD;AAFnC;AADiC,KAAlC,CAAP;AAMD;;SAEMoJ,QAAA;AACL,WAAO,KAAK1R,MAAL,CAAYM,IAAZ,CAAiB,cAAjB,CAAP;AACD;;;;;IC5DkBqR;AAGnB,kBAAY3R,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEM4R,SAAA;AACL,WAAO,KAAK5R,MAAL,CAAY3D,GAAZ,CAAgB,gBAAhB,CAAP;AACD;;;;;ICFkBwV;AAGnB,gBAAY7R,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;AAED;;;;;;;SAGOC,OAAA,cAAKC,MAAL;AACL,WAAO,KAAKF,MAAL,CAAY3D,GAAZ,CAAmC,eAAnC,EAAoD;AACzD6D,MAAAA,MAAM,EAANA;AADyD,KAApD,CAAP;AAGD;AAED;;;;;SAGOC,WAAA;AACL,WAAO,KAAKH,MAAL,CAAY3D,GAAZ,CAAuC,mBAAvC,CAAP;AACD;AAED;;;;;SAGO+D,eAAA,sBAAa0R,QAAb;AACL,WAAO,KAAK9R,MAAL,CAAYM,IAAZ,CAAiB,mBAAjB,EAAsC;AAC3CxF,MAAAA,IAAI,EAAEgX;AADqC,KAAtC,CAAP;AAGD;AAED;;;;;SAGO/L,SAAA;AACL,WAAO,KAAK/F,MAAL,CAAY3D,GAAZ,CAAyC,SAAzC,CAAP;AACD;AAED;;;;;SAGO0V,aAAA,oBAAWlX,MAAX;AACL,WAAO,KAAKmF,MAAL,CAAYwC,GAAZ,CAAgB,SAAhB,EAA2B;AAChC1H,MAAAA,IAAI,EAAE;AAAED,QAAAA,MAAM,EAANA;AAAF;AAD0B,KAA3B,CAAP;AAGD;AAED;;;;;SAGOmX,YAAA,mBAAUxR,OAAV;AACL,WAAO,KAAKR,MAAL,CAAYM,IAAZ,CAAqB,gBAArB,EAAuC;AAC5CxF,MAAAA,IAAI,EAAE0F;AADsC,KAAvC,CAAP;AAGD;AAED;;;;;SAGOC,UAAA,iBAAQC,eAAR;AACL,WAAO,KAAKV,MAAL,CAAYM,IAAZ,CAAqB,kBAArB,EAAyC;AAC9CxF,MAAAA,IAAI,EAAE;AACJ6F,QAAAA,gBAAgB,EAAED;AADd;AADwC,KAAzC,CAAP;AAKD;AAED;;;;;SAGOE,gBAAA,uBAAcC,IAAd;AACL,WAAO,KAAKb,MAAL,CAAY3D,GAAZ,CACL,4BADK,EAEL;AACEvB,MAAAA,IAAI,EAAE;AACJ+F,QAAAA,IAAI,EAAJA;AADI;AADR,KAFK,CAAP;AAQD;;;;;ICvFkBoR;AAGnB,gBAAYjS,MAAZ;AACE,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;SAEMwE,QAAA;AACL,WAAO,KAAKxE,MAAL,CAAY3D,GAAZ,CAAgB,YAAhB,CAAP;AACD;;SAEMuI,SAAA;QACLO,cAAAA;+BACAC;QAAAA,0CAAa;wBACbF;QAAAA,4BAAM;AAMN,WAAO,KAAKlF,MAAL,CAAYM,IAAZ,CAAiB,cAAjB,EAAiC;AACtCxF,MAAAA,IAAI,EAAE;AACJqK,QAAAA,MAAM,EAANA,MADI;AAEJI,QAAAA,WAAW,EAAEH,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAFT;AAGJD,QAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAAS,GAAT;AAHN;AADgC,KAAjC,CAAP;AAOD;;SAEMb,MAAA,aAAIX,EAAJ;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,YAAyByH,EAAzB,CAAP;AACD;;SAEMoN,QAAA,eAAMpN,EAAN;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,YAAyByH,EAAzB,YAAP;AACD;;SAEMkN,SAAA,gBAAOlN,EAAP;AACL,WAAO,KAAK9D,MAAL,CAAY3D,GAAZ,YAAyByH,EAAzB,aAAP;AACD;;;;;ICEUoO,cAAb;AA6BE,0BAAY1R,OAAZ;AACE,SAAKA,OAAL,gBAAoB0R,cAAc,CAACC,eAAnC,EAAuD3R,OAAvD;AACA,SAAK4R,IAAL,GAAY,KAAKC,gBAAL,EAAZ;AAEA,SAAKtS,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AACA,SAAKsB,IAAL,GAAY,IAAIA,IAAJ,CAAS,IAAT,CAAZ;AACA,SAAK4D,aAAL,GAAqB,IAAIA,aAAJ,CAAkB,IAAlB,CAArB;AACA,SAAKQ,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AACA,SAAKM,MAAL,GAAc,IAAIA,MAAJ,CAAW,IAAX,CAAd;AACA,SAAKuM,MAAL,GAAc,IAAIA,WAAJ,CAAW,IAAX,CAAd;AACA,SAAKpI,KAAL,GAAa,IAAIA,KAAJ,CAAU,IAAV,CAAb;AACA,SAAKtD,IAAL,GAAY,IAAIA,IAAJ,CAAS,IAAT,CAAZ;AACA,SAAKwG,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AACA,SAAKF,aAAL,GAAqB,IAAIA,aAAJ,CAAkB,IAAlB,CAArB;AACA,SAAK5G,MAAL,GAAc,IAAIA,MAAJ,CAAW,IAAX,CAAd;AACA,SAAKlC,KAAL,GAAa,IAAIA,KAAJ,CAAU,IAAV,CAAb;AACA,SAAK6J,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AACA,SAAKiC,GAAL,GAAW,IAAIA,GAAJ,CAAQ,IAAR,CAAX;AACA,SAAKqC,SAAL,GAAiB,IAAIA,QAAJ,CAAc,IAAd,CAAjB;AACA,SAAKlB,KAAL,GAAa,IAAIA,KAAJ,CAAU,IAAV,CAAb;AACA,SAAKM,MAAL,GAAc,IAAIA,MAAJ,CAAW,IAAX,CAAd;AACA,SAAKE,IAAL,GAAY,IAAIA,IAAJ,CAAS,IAAT,CAAZ;AACA,SAAKI,IAAL,GAAY,IAAIA,IAAJ,CAAS,IAAT,CAAZ;AACA,SAAKrE,KAAL,GAAa,IAAIA,KAAJ,CAAU,IAAV,CAAb;AACD;;AArDH;;AAAA,SAuDS4E,IAvDT,GAuDS,cAAKC,KAAL,EAAsCC,QAAtC;AACLpU,IAAAA,YAAY,CAACkU,IAAb,CAAkBC,KAAlB,EAAyBC,QAAzB;AACD,GAzDH;;AAAA,SA2DSC,EA3DT,GA2DS,YAAGF,KAAH,EAAoCC,QAApC;AACLpU,IAAAA,YAAY,CAACqU,EAAb,CAAgBF,KAAhB,EAAuBC,QAAvB;AACD,GA7DH;;AAAA,SA+DSE,GA/DT,GA+DS,aAAIH,KAAJ,EAAqCC,QAArC;AACLpU,IAAAA,YAAY,CAACsU,GAAb,CAAiBH,KAAjB,EAAwBC,QAAxB;AACD,GAjEH;;AAAA,SAmESG,SAnET,GAmES,mBAAUrS,OAAV;AACL,SAAKA,OAAL,gBAAoB,KAAKA,OAAzB,EAAqCA,OAArC;AACA,WAAO,IAAP;AACD,GAtEH;;AAAA,SAwESsS,QAxET,GAwES,kBAAS3O,KAAT;AACL,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKiO,IAAL,CAAUW,QAAV,CAAmB9X,OAAnB,CAA2B+X,MAA3B,CAAkCtQ,aAAlC,cAA2DyB,KAA3D;AACA,WAAO,IAAP;AACD,GA5EH;;AAAA,SA8ES8O,UA9ET,GA8ES;AACL,SAAK9O,KAAL,GAAamE,SAAb;AACA,SAAK8J,IAAL,CAAUW,QAAV,CAAmB9X,OAAnB,CAA2B+X,MAA3B,CAAkCtQ,aAAlC;AACA,WAAO,IAAP;AACD,GAlFH;;AAAA,SAoFSrG,GApFT,GAoFS,aACLsF,GADK,EAEL9G,MAFK;AAIL,WAAO,KAAKuX,IAAL;AACLc,MAAAA,MAAM,EAAE,KADH;AAELvR,MAAAA,GAAG,EAAHA;AAFK,OAGF9G,MAHE,EAAP;AAKD,GA7FH;;AAAA,SA+FSyF,IA/FT,GA+FS,cACLqB,GADK,EAEL9G,MAFK;AAIL,WAAO,KAAKuX,IAAL;AACLc,MAAAA,MAAM,EAAE,MADH;AAELvR,MAAAA,GAAG,EAAHA;AAFK,OAGF9G,MAHE,EAAP;AAKD,GAxGH;;AAAA,SA0GS2H,GA1GT,GA0GS,aACLb,GADK,EAEL9G,MAFK;AAIL,WAAO,KAAKuX,IAAL;AACLc,MAAAA,MAAM,EAAE,KADH;AAELvR,MAAAA,GAAG,EAAHA;AAFK,OAGF9G,MAHE,EAAP;AAKD,GAnHH;;AAAA,qBAqHS,iBACL8G,GADK,EAEL9G,MAFK;AAIL,WAAO,KAAKuX,IAAL;AACLc,MAAAA,MAAM,EAAE,QADH;AAELvR,MAAAA,GAAG,EAAHA;AAFK,OAGF9G,MAHE,EAAP;AAKD,GA9HH;;AAAA,SAgIUwX,gBAhIV,GAgIU;;;AACN,QAAMc,aAAa,GAAG5T,KAAK,CAAC6T,MAAN,CAAa;AACjC3W,MAAAA,OAAO,EAAE,KAAK+D,OAAL,CAAa/D,OADW;AAEjC4W,MAAAA,eAAe,EAAE,IAFgB;AAGjCC,MAAAA,OAAO,EAAE,KAHwB;AAIjCC,MAAAA,gBAAgB,EAAE,0BAAArT,MAAM;AAAA,eACtBsT,EAAE,CAAC1C,SAAH,CAAa5Q,MAAb,EAAqB;AAAEuT,UAAAA,WAAW,EAAE;AAAf,SAArB,CADsB;AAAA;AAJS,KAAb,CAAtB;;AASA,QAAMC,4BAA4B,GAA+C,CAC/ErU,uBAD+E,EAE/EZ,2BAF+E,EAG/EW,kBAH+E,CAAjF;AAMAsU,IAAAA,4BAA4B,CACzB1K,GADH,CACO,UAAA2K,yBAAyB;AAAA,aAAIA,yBAAyB,CAAC,KAAI,CAACnT,OAAN,CAA7B;AAAA,KADhC,EAEGoT,OAFH,CAEW;UAAG7U,mBAAAA;UAAaC,kBAAAA;AACvBmU,MAAAA,aAAa,CAACU,YAAd,CAA2BjV,QAA3B,CAAoCkV,GAApC,CAAwC/U,WAAxC,EAAqDC,UAArD;AACD,KAJH;AAMA,WAAOmU,aAAP;AACD,GAvJH;;AAAA;AAAA;AACgBjB,qBAAA,GAAS/T,MAAT;AACA+T,8BAAA,GAAkB1V,sBAAlB;;;;;;;;;;;;;;;"}