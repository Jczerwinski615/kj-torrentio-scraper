import { PutioAPIClient } from '../../client';
import { IUserPaymentInfoResponse, IVoucherInfoResponse, INanoPaymentRequestResponse, IPaymentOptionsResponse } from './types';
export default class Payment {
    private client;
    constructor(client: PutioAPIClient);
    Info(): Promise<import("../..").IPutioAPIClientResponse<IUserPaymentInfoResponse>>;
    Plans(): Promise<import("../..").IPutioAPIClientResponse<any>>;
    Options(): Promise<import("../..").IPutioAPIClientResponse<IPaymentOptionsResponse>>;
    History({ unReportedOnly }?: {
        unReportedOnly?: boolean | undefined;
    }): Promise<import("../..").IPutioAPIClientResponse<any>>;
    Invites(): Promise<import("../..").IPutioAPIClientResponse<any>>;
    GetPlanChangeInfo({ planPath, paymentType, couponCode, }: {
        planPath: string;
        paymentType: string;
        couponCode?: string;
    }): Promise<import("../..").IPutioAPIClientResponse<any>>;
    GetPlanChangeUrls({ planPath, paymentType, couponCode, confirmationCode, }: {
        planPath: string;
        paymentType: string;
        couponCode?: string;
        confirmationCode?: string;
    }): Promise<import("../..").IPutioAPIClientResponse<any>>;
    ChangePlan(args: any): Promise<import("../..").IPutioAPIClientResponse<any>>;
    CreateNanoPaymentRequest({ planCode }: {
        planCode: string;
    }): Promise<import("../..").IPutioAPIClientResponse<INanoPaymentRequestResponse>>;
    CreateCoinbaseCharge(path: string): Promise<import("../..").IPutioAPIClientResponse<any>>;
    CreateCoinbaseCheckout(path: string): Promise<import("../..").IPutioAPIClientResponse<any>>;
    CancelSubscription(): Promise<import("../..").IPutioAPIClientResponse<any>>;
    GetVoucherInfo(code: string): Promise<import("../..").IPutioAPIClientResponse<IVoucherInfoResponse>>;
    RedeemVoucher(code: string): Promise<import("../..").IPutioAPIClientResponse<any>>;
    VerifyFastspringPayment(reference: string): Promise<import("../..").IPutioAPIClientResponse<any>>;
    Report(paymentIds?: never[]): Promise<import("../..").IPutioAPIClientResponse<any>>;
    AddWaitingPayment(data: any): Promise<import("../..").IPutioAPIClientResponse<any>>;
}
