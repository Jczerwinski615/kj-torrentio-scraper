import { PutioAPIClient } from '../../client';
import { IUserInfoResponse, IUserSettingsResponse, IUserConfirmationsResponse, ConfirmationSubject, ClearDataOptions } from './types';
export default class User {
    private client;
    constructor(client: PutioAPIClient);
    /**
     * @deprecated Use `Account.Info` method instead.
     */
    Info(params: Record<string, string | number>): Promise<import("../..").IPutioAPIClientResponse<IUserInfoResponse>>;
    /**
     * @deprecated Use `Account.Settings` method instead.
     */
    Settings(): Promise<import("../..").IPutioAPIClientResponse<IUserSettingsResponse>>;
    /**
     * @deprecated Use `Account.SaveSettings` method instead.
     */
    SaveSettings(settings: Record<string, any>): Promise<import("../..").IPutioAPIClientResponse<any>>;
    /**
     * @deprecated Use `Config.Read` method instead.
     */
    Config(): Promise<import("../..").IPutioAPIClientResponse<Record<string, unknown>>>;
    /**
     * @deprecated Use `Config.Write` method instead.
     */
    SaveConfig(config: Record<string, unknown>): Promise<import("../..").IPutioAPIClientResponse<any>>;
    /**
     * @deprecated Use `Account.Clear` method instead.
     */
    ClearData(options: ClearDataOptions): Promise<import("../..").IPutioAPIClientResponse<{}>>;
    /**
     * @deprecated Use `Account.Destroy` method instead.
     */
    Destroy(currentPassword: string): Promise<import("../..").IPutioAPIClientResponse<{}>>;
    /**
     * @deprecated Use `Account.Confirmations` method instead.
     */
    Confirmations(type?: ConfirmationSubject): Promise<import("../..").IPutioAPIClientResponse<IUserConfirmationsResponse>>;
}
